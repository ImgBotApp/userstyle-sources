@import url("https://fonts.googleapis.com/css?family=Merriweather+Sans:400,400i,700,700i");
html,
body {
  font-family: 'Merriweather Sans', Arial, sans-serif;
}
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  letter-spacing: normal;
  word-spacing: normal;
  font-size: 14pt;
  line-height: 1.44em;
  color: #000;
  cursor: auto !important;
}
pre,
code,
tt,
kbd,
samp {
  font: normal 14pt/1.44em Monaco, Consolas, 'Lucida Console', monospace;
}
a,
.search-result-meta a,
.tagline a,
.thing a.title {
  color: #05f;
  text-decoration: none;
}
a:visited,
.search-result-meta a:visited,
.tagline a:visited,
.thing a.title:visited {
  color: #b48;
}
a:hover,
.search-result-meta a:hover,
.tagline a:hover,
.thing a.title:hover {
  text-decoration: underline;
}
.md a:not(.expando-button) {
  padding-bottom: 1px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: rgba(0,85,255,0.5);
}
.md a:not(.expando-button),
.md a:not(.expando-button):link {
  color: inherit;
}
.md a:not(.expando-button):visited {
  border-bottom-color: rgba(187,68,136,0.5);
}
.md a:not(.expando-button),
.md a:not(.expando-button):hover,
.md a:not(.expando-button):link,
.md a:not(.expando-button):visited {
  text-decoration: none;
}
.md a:not(.expando-button):hover {
  color: #05f;
  -webkit-transition: all ease-in 0.25s;
  -moz-transition: all ease-in 0.25s;
  transition: all ease-in 0.25s;
}
.md a:not(.expando-button):hover:visited {
  color: #b48;
}
.md,
.md .-text,
.md pre > code,
.md li,
.md p,
.md textarea,
.md th,
.md td {
  font-size: inherit;
}
.usertext,
.md-container,
.md-container-small {
  font-size: inherit;
}
.commentingAs {
  font-size: 0.9em;
}
.tagline,
.flat-list,
.search-result-meta,
.RESDialogSmall,
.menuarea,
.morecomments a {
  font-size: 0.8em;
}
.domain {
  font-size: 0.7em;
}
.side {
  overflow-x: hidden;
  position: relative;
  z-index: 2;
  margin-right: -295px;
  right: -300px;
}
.thing {
  position: relative;
}
.thing .title {
  font-weight: bold;
  font-size: inherit;
  line-height: 2em;
}
.entry {
  position: relative;
  margin: 0;
  padding: 6px 9px 6px 30px;
  border-style: solid;
  border-width: 2px;
  border-color: transparent;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.entry.RES-keyNav-activeElement {
  border-color: #80aaff;
  z-index: 2;
  margin: -4px -9px -5px -5px;
  padding: 10px 18px 11px 35px;
}
.entry .flat-list li a,
.entry a.give-gold {
  color: #406abf;
  font-size: inherit;
}
.entry .flat-list li a:after,
.entry a.give-gold:after {
  display: none;
}
.md {
  color: inherit;
  max-width: 100%;
}
.linklisting .md,
.commentarea .md {
  margin: 0.5em 0.25em 0 0;
}
.md blockquote {
  margin: 0.5em 0;
  padding: 0.4em 0.5em 0.25em;
  border-left: solid 2px #444;
  color: #000;
  background-color: #ddd;
  font-style: italic;
}
.expand-inline {
  margin-left: -20px;
}
.organic-listing .link .entry {
  border-bottom: none;
  padding-bottom: 0;
}
.organic-listing .sponsored-tagline {
  display: none;
}
.link.last-clicked {
  border: none !important;
}
.link .entry {
  border-bottom-color: #ccc;
}
.link .entry.RES-keyNav-activeElement {
  border-bottom-color: #80aaff;
}
.link .entry .flat-list {
  float: right;
  padding-right: 0.5em;
  line-height: 2.4em;
below(3)
}
.link .entry .flat-list a.comments {
  color: #fff !important;
  background-color: #49f;
  border-radius: 4px !important;
  padding: 4px 6px 4px !important;
}
.link .entry .flat-list a.comments .newComments {
  color: #bbb;
  font-style: italic;
}
.link .entry .flat-list a.comments:hover {
  background-color: #0049a2 !important;
  text-decoration: none;
}
.link .entry .flat-list a.comments:visited {
  background-color: #c60 !important;
}
.link .entry .flat-list a.comments:visited:hover {
  background-color: #630 !important;
}
.link .thumbnail,
.link .midcol {
  margin-top: 5px !important;
}
.link .thumbnail.self {
  display: none;
}
.link .tagline {
  float: left;
  line-height: 2.4em;
}
.link .flair,
.link .linkflairlabel {
  display: inline;
  font-size: 0.6em;
  padding: 0.25em 0.5em;
}
.link .flair:empty,
.link .linkflairlabel:empty {
  display: none;
}
.link .usertext-body {
  padding-top: 0.8em;
}
.link .usertext-body .md {
  border: 0;
  background-color: inherit;
}
.comment .midcol {
  position: absolute;
  top: 0.5em;
  left: 7.5px;
  width: 25px;
  float: none;
  margin: 0;
  z-index: 4;
}
.comment .midcol .arrow {
  margin: 0 0 0.5em;
}
.comment .midcol .arrow:before {
  display: none !important;
}
.comment .parent {
  margin-left: 30px;
}
.comment .entry {
  background-color: inherit;
}
.comment .keyNavAnnotation {
  display: none !important;
}
.comment .tagline {
  display: block;
  border-bottom: dotted 1px #888;
  padding-bottom: 0.3em;
  margin-bottom: 0.3em;
  z-index: 20;
}
.comment .tagline .score {
  font-weight: bold;
}
.comment .morechildren .tagline {
  border-bottom: 0;
}
.comment .flat-list {
  vertical-align: bottom;
  z-index: 8;
  opacity: 0.5;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
}
@media only screen and (max-width: 959px) {
  .comment .flat-list {
    margin: 0.5em 0 0;
    padding: 0.25em 0.5em;
    border-top: dotted 1px #888;
  }
}
@media only screen and (min-width: 960px) {
  .comment .flat-list {
    position: absolute;
    top: 0.5em;
    right: 0.75em;
    font-size: 0.7em;
    visibility: hidden;
  }
}
@media only screen and (max-width: 959px) {
  .comment.RES-keyNav-activeThing > .entry .flat-list {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@media only screen and (min-width: 960px) {
  .comment.RES-keyNav-activeThing > .entry .flat-list {
    opacity: 0.75;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=75)";
    filter: alpha(opacity=75);
    visibility: visible;
  }
}
.comment.RES-keyNav-activeThing > .entry .flat-list:hover {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.comment .tagline:empty,
.comment .child:empty {
  display: none;
}
.profile-page .linklisting .comment {
  margin-bottom: 0.5em;
  position: static;
}
.profile-page .linklisting .comment:nth-child(4n+1) {
  background-color: #f4f4f4;
}
.newComments {
  color: #000;
}
.new-comment .usertext-body {
  border: none;
}
.new-comment .usertext-body .md {
  padding: 4px 0 0;
}
.new-comment .usertext-body.md-container,
.new-comment.RES-keyNav-activeThing .usertext-body.md-container {
  background-color: #fde !important;
}
.edited-timestamp {
  visibility: hidden !important;
  position: absolute !important;
}
.usertext-edit {
  width: 800px !important;
  max-width: 90% !important;
  margin: 0.75em 0 0 0.5em;
  font-size: inherit;
}
.usertext-edit textarea[name = text] {
  width: 100% !important;
  min-height: 8em;
  padding: 0.4em 0.6em;
  border: solid 1px #888;
  font-family: inherit;
  font-size: 0.9em;
}
#sr-header-area {
  height: auto !important;
}
#sr-header-area a {
  font-size: 10pt !important;
}
#RESShortcutsViewport {
  max-height: 100% !important;
  overflow-y: visible !important;
}
#header {
  min-height: 80px;
}
#header-bottom-left {
  position: absolute;
  bottom: 1px;
  left: 0;
}
#header-bottom-right {
  margin-top: 3px;
}
.res-commentBoxes .comment {
  padding: 0 !important;
}
.RESDialogSmall.livePreview {
  padding: 0.25em 0.5em;
}
.RESDialogSmall.livePreview > h3 {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 10px 0 0;
  padding: 0.25em 0.5em 0 0.5em;
  border-bottom: none;
  border-top: 1px solid #bbb;
}
.RESDialogSmall.livePreview > .md {
  padding-bottom: 36px;
}
.RESDialogSmall.livePreview .gearIcon {
  float: left;
  margin: -0.15em 0.5em 0 0;
}
.RES-keyNav-activeElement,
.RES-keyNav-activeElement .md-container {
  background-color: inherit !important;
}
#keyHelp {
  width: 480px;
  font-size: 12pt;
}
#keyHelp td:first-child {
  width: 120px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9fbWl4aW5zL3R5cG9ncmFwaHkuc3R5bCIsInNyYy9yZWRkaXQvcmVkZGl0LXJlYWRhYmlsaXR5LnN0eWwiLCJub2RlX21vZHVsZXMvbmliL2xpYi9uaWIvdmVuZG9yLnN0eWwiLCJub2RlX21vZHVsZXMvbmliL2xpYi9uaWIvc2l6ZS5zdHlsIiwic3JjL19taXhpbnMvYmFzaWNzLnN0eWwiLCJub2RlX21vZHVsZXMvbmliL2xpYi9uaWIvZmxleC5zdHlsIiwibm9kZV9tb2R1bGVzL25pYi9saWIvbmliL2JvcmRlci5zdHlsIiwibm9kZV9tb2R1bGVzL25pYi9saWIvbmliL2JvcmRlci1yYWRpdXMuc3R5bCIsIm5vZGVfbW9kdWxlcy9uaWIvbGliL25pYi9wb3NpdGlvbnMuc3R5bCIsInNyYy9fbWl4aW5zL3Jlc3BvbmQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmtCO0FBRWhCO0FBQ0E7RUFDRSxhQUFpQix1Q0FBakI7O0FDc0JKO0VEdkNFLHdCQUF3QixZQUF4QjtFQUNBLHlCQUF5QixVQUF6QjtFQUNBLGdCQUFnQixtQkFBaEI7RUFFQSxnQkFBZ0IsT0FBaEI7RUFDQSxjQUFjLE9BQWQ7RUNzQ0EsV0FBVyxLQUFYO0VBQ0EsYUFBYSxPQUFiO0VBQ0EsT0FBTyxLQUFQO0VDNmNFLFFBQU8sZ0JBQVA7O0FEeGNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRSxNQUFNLGlFQUFOOztBQU1GO0FFa1lnQjtBQUFBO0FBQUE7RUN2WmQsT0FBTyxLQUFQO0VBS0UsaUJBQWlCLEtBQWpCOztBQUlGOzs7O0VBQ0UsT0FBTyxLQUFQOztBQUVGOzs7O0VBSUksaUJBQWlCLFVBQWpCOztBSGFOO0VHQ0UsZ0JBQWdCLElBQWhCO0VBQ0EscUJBQXFCLE1BQXJCO0VBQ0EscUJBQXFCLElBQXJCO0VBQ0EscUJBQWdELG1CQUFoRDs7QUFQQTtBQUNBO0VBQ0UsT0FBTyxRQUFQOztBQU9GO0VBQ0UscUJBQThDLHFCQUE5Qzs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtFQUNFLGlCQUFpQixLQUFqQjs7QUFFRjtFQUNFLE9BQU8sS0FBUDtFRmhEYyxvQkFBc0Msa0JBQXRDO0VBQUEsaUJBQXNDLGtCQUF0QztFQVJILFlBQStCLGtCQUEvQjs7QUUyRFg7RUFDRSxPQUFPLEtBQVA7O0FIWko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLFdBQVcsUUFBWDs7QUFHSjtBQUNBO0FBQ0E7RUFDRSxXQUFXLFFBQVg7O0FBR0Y7RUFDRSxXQUFXLE1BQVg7O0FBR0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0UsV0FBVyxNQUFYOztBQUdGO0VBQ0UsV0FBVyxNQUFYOztBQU1GO0VBQ0UsWUFBWSxPQUFaO0VBQ0EsVUFBVSxTQUFWO0VBQ0EsU0FBUyxFQUFUO0VBQ0EsY0FBYyxPQUFkO0VBQ0EsT0FBTyxPQUFQOztBQU1GO0VBQ0UsVUFBVSxTQUFWOztBQUVBO0VBQ0UsYUFBYSxLQUFiO0VBQ0EsV0FBVyxRQUFYO0VBQ0EsYUFBYSxJQUFiOztBQUdKO0VBQ0UsVUFBVSxTQUFWO0VBQ0EsUUFBUSxFQUFSO0VBQ0EsU0FBUyxpQkFBVDtFQUNBLGNBQWMsTUFBZDtFQUNBLGNBQWMsSUFBZDtFQUNBLGNBQWMsWUFBZDtFQ3JHZ0Isb0JBQUcsV0FBSDtFQUFBLGlCQUFHLFdBQUg7RUFSSCxZQUFHLFdBQUg7O0FEZ0hiO0VBR0UsY0FBYyxRQUFkO0VBQ0EsU0FBUyxFQUFUO0VBQ0EsUUFBUSxvQkFBUjtFQUNBLFNBQVMsb0JBQVQ7O0FBRUY7QUFDQTtFQUNFLE9BQW1DLFFBQW5DO0VBQ0EsV0FBVyxRQUFYOztBQUVBOztFSTFJQSxTQUFTLEtBQVQ7O0FKOElKO0VBQ0UsT0FBTyxRQUFQO0VBQ0EsV0FBVyxLQUFYOztBQUVBO0FBQ0E7RUFDRSxRQUFRLGlCQUFSOztBQUVGO0VBQ0UsUUFBUSxRQUFSO0VBQ0EsU0FBUyxtQkFBVDtFQUNBLGFBQWEsZUFBYjtFQUVBLE9BQU8sS0FBUDtFQUNBLGtCQUFrQixLQUFsQjtFQUNBLFlBQVksT0FBWjs7QUFHSjtFQUNFLGFBQWEsTUFBYjs7QUFJQTtFQUNFLGVBQWUsS0FBZjtFQUNBLGdCQUFnQixFQUFoQjs7QUFFRjtFSXpLRSxTQUFTLEtBQVQ7O0FKaUxGO0VLOUxFLFFBQVEsZ0JBQVI7O0FMaU1GO0VBQ0UscUJBQXFCLEtBQXJCOztBQUVBO0VBQ0UscUJBQXFCLFFBQXJCOztBQUVGO0VBQ0UsT0FBTyxNQUFQO0VBQ0EsZUFBZSxNQUFmO0VBQ0EsYUFBYSxNQUFiO0FBRVE7O0FBSVI7RUFDRSxPQUFPLGdCQUFQO0VBQ0Esa0JBQWtCLEtBQWxCO0VNdktOLGVBQWMsZUFBZDtFTjBLTSxTQUFTLHVCQUFUOztBQUVBO0VBQ0UsT0FBTyxLQUFQO0VBQ0EsWUFBWSxPQUFaOztBQUVGO0VBQ0Usa0JBQTRDLG1CQUE1QztFQUNBLGlCQUFpQixLQUFqQjs7QUFFRjtFQUNFLGtCQUFrQixnQkFBbEI7O0FBRUE7RUFDRSxrQkFBb0QsZ0JBQXBEOztBQUdWO0FBQ0E7RUFDRSxZQUFZLGVBQVo7O0FBRUY7RUk3TkUsU0FBUyxLQUFUOztBSmdPRjtFQUNFLE9BQU8sS0FBUDtFQUNBLGFBQWEsTUFBYjs7QUFFRjtBQUNBO0VJck9FLFNBQVMsT0FBVDtFSnVPQSxXQUFXLE1BQVg7RUd2T0YsU0FBZ0IsYUFBaEI7O0FIME9FOztFSTFPQSxTQUFTLEtBQVQ7O0FKOE9GO0VBQ0UsYUFBYSxNQUFiOztBQUVBO0VLOVBBLFFBQVEsRUFBUjtFTGlRRSxrQkFBa0IsUUFBbEI7O0FBT0o7RU83UUEsVUFBc0IsU0FBdEI7RUFHWSxLQUE0QyxNQUE1QztFQUFBLE1BQTRDLE1BQTVDO0VQNFFWLE9BQU8sS0FBUDtFQUNBLE9BQU8sS0FBUDtFQUNBLFFBQVEsRUFBUjtFQUNBLFNBQVMsRUFBVDs7QUFFQTtFQUNFLFFBQVEsVUFBUjs7QUFFQTtFSXJRRixTQUFTLGdCQUFUOztBSndRRjtFQUNFLGFBQWEsS0FBYjs7QUFFRjtFQUNFLGtCQUFrQixRQUFsQjs7QUFFRjtFSTlRRSxTQUFTLGdCQUFUOztBSmlSRjtFSWpSRSxTQUFTLE1BQVQ7RUptUkEsZUFBZSxnQkFBZjtFQUNBLGdCQUFnQixNQUFoQjtFQUNBLGVBQWUsTUFBZjtFQUNBLFNBQVMsR0FBVDs7QUFFQTtFQUNFLGFBQWEsS0FBYjs7QUFFSjtFQUNFLGVBQWUsRUFBZjs7QUFFRjtFQUNFLGdCQUFnQixPQUFoQjtFQUVBLFNBQVMsRUFBVDtFQzNDRixTQUFTLElBQVQ7RUFXTSxZQUF5RSxzREFBekU7RUFDQSxRQUFpQyxrQkFBakM7O0FPdk80QztBQUFBO0lSMFE5QyxRQUFRLFVBQVI7SUdyU0osU0FBZ0IsYUFBaEI7SUh1U0ksWUFBWSxnQkFBWjs7O0FRL1E2QztBQUFBO0lEMUNqRCxVQUFzQixTQUF0QjtJQUdZLEtBQTRDLE1BQTVDO0lBQUEsT0FBNEMsT0FBNUM7SVAwVFIsV0FBVyxNQUFYO0lBRUEsWUFBWSxPQUFaOzs7QVFsUjhDO0FBQUE7SVAyTmxELFNBQVMsRUFBVDtJQVFNLFlBQVksS0FBWjtJQUNBLFFBQVEsS0FBUjs7O0FPdk8yQztBQUFBO0lQOE5qRCxTQUFTLEtBQVQ7SUFXTSxZQUF5RSxzREFBekU7SUFDQSxRQUFpQyxrQkFBakM7SURvREEsWUFBWSxRQUFaOzs7QUFFSjtFQ2xFRixTQUFTLEVBQVQ7RUFRTSxZQUFZLEtBQVo7RUFDQSxRQUFRLEtBQVI7O0FENEROO0FBQ0E7RUk1VEUsU0FBUyxLQUFUOztBSmlVRjtFQUNFLGVBQWUsTUFBZjtFQUNBLFVBQVUsT0FBVjs7QUFFQTtFQUNFLGtCQUFrQixRQUFsQjs7QUFHTjtFQUNFLE9BQU8sS0FBUDs7QUFJQTtFSzNWRSxRQUFRLEtBQVI7O0FMOFZBO0VBQ0UsU0FBUSxRQUFSOztBQUlGOztFQUNFLGtCQUFrQixnQkFBbEI7O0FBR047RUFDRSxZQUFZLGtCQUFaO0VBQ0EsVUFBVSxvQkFBVjs7QUFNRjtFQUNFLE9BQU8saUJBQVA7RUFDQSxXQUFXLGVBQVg7RUFDQSxRQUFRLGlCQUFSO0VBQ0EsV0FBVyxRQUFYOztBQUVBO0VBQ0UsT0FBTyxnQkFBUDtFQUNBLFlBQVksSUFBWjtFQUNBLFNBQVMsWUFBVDtFS3hYQSxRQUFRLGVBQVI7RUwwWEEsYUFBYSxRQUFiO0VBQ0EsV0FBVyxNQUFYOztBQU1KO0VBQ0UsUUFBUSxnQkFBUjs7QUFDQTtFQUNFLFdBQVcsZ0JBQVg7O0FBR0o7RUFDRSxZQUFZLGdCQUFaO0VBQ0EsWUFBWSxtQkFBWjs7QUFHRjtFQUNFLFlBQVksS0FBWjs7QUFHRjtFT3JaRSxVQUFzQixTQUF0QjtFQUdZLFFBQTRDLElBQTVDO0VBQUEsTUFBNEMsRUFBNUM7O0FQc1pkO0VBQ0UsWUFBWSxJQUFaOztBQUlBO0VBQ0UsU0FBUSxhQUFSOztBQUdKO0VHaFpFLFNBQWdCLGFBQWhCOztBSG1aQTtFT3JhQSxVQUFzQixTQUF0QjtFQUdZLFFBQTRDLEVBQTVDO0VBQUEsTUFBNEMsRUFBNUM7RVBvYVYsT0FBTyxFQUFQO0VBQ0EsUUFBUSxTQUFSO0VBQ0EsU0FBUyxxQkFBVDtFQUNBLGVBQWUsS0FBZjtFQUNBLFlBQVksZUFBWjs7QUFFRjtFQUNFLGdCQUFnQixLQUFoQjs7QUFFRjtFQUNFLE9BQU8sS0FBUDtFQUNBLFFBQVEsa0JBQVI7O0FBSUY7QUFDQTtFQUNFLGtCQUFrQixtQkFBbEI7O0FBRUo7RUFDRSxPQUFPLE1BQVA7RUFDQSxXQUFXLEtBQVg7O0FBRUE7RUFDRSxPQUFPLE1BQVAiLCJmaWxlIjoicmVkZGl0L3JlZGRpdC1yZWFkYWJpbGl0eS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuc3RhbmRhcmQtdHlwZS1zZXR0aW5ncygpXHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcclxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlXHJcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eVxyXG5cclxuICBsZXR0ZXItc3BhY2luZzogbm9ybWFsXHJcbiAgd29yZC1zcGFjaW5nOiBub3JtYWxcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG51c2Utd2ViLWZvbnQoJG5hbWUsICR2YXJpYW50cyA9ICc0MDAsNDAwaSw3MDAsNzAwaScpXHJcbiAgJHVybCA9IGdldC13ZWItZm9udC11cmwoJG5hbWUsICR2YXJpYW50cylcclxuXHJcbiAgQGltcG9ydCB1cmwoJHVybClcclxuXHJcbiAgaHRtbFxyXG4gIGJvZHlcclxuICAgIGZvbnQtZmFtaWx5ICRuYW1lLCBBcmlhbCwgc2Fucy1zZXJpZlxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmp1c3RpZnkoKVxyXG4gIHRleHQtYWxpZ24ganVzdGlmeVxyXG4gIHRleHQtanVzdGlmeSBkaXN0cmlidXRlXHJcblxyXG4gICY6YWZ0ZXJcclxuICAgIGNvbnRlbnQgXCJcIlxyXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcclxuICAgIHdpZHRoIDEwMCVcclxuXHJcbiAgPiAqXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbiB0b3BcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5zeW50YXgoJGNvbG91ciwgJHN0eWxlcy4uLilcclxuICBpZiBsZW5ndGgoJGNvbG91cikgPiAxXHJcbiAgICAkc3R5bGVzID0gc2xpY2UoJGNvbG91ciwgMSlcclxuICAgICRjb2xvdXIgPSAkY29sb3VyWzBdXHJcblxyXG4gICRpbXBvcnRhbmNlID0gYXJndW1lbnRzW2xlbmd0aChhcmd1bWVudHMpIC0gMV0gPT0gIWltcG9ydGFudCA/ICFpbXBvcnRhbnQgOiB1bnF1b3RlKCcnKVxyXG5cclxuICBjb2xvcjogJGNvbG91ciAkaW1wb3J0YW5jZVxyXG5cclxuICBmb250LXdlaWdodDogYm9sZCAkaW1wb3J0YW5jZSBpZiBib2xkIGluICRzdHlsZXNcclxuICBmb250LXN0eWxlOiBpdGFsaWMgJGltcG9ydGFuY2UgaWYgaXRhbGljIGluICRzdHlsZXNcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSAkaW1wb3J0YW5jZSBpZiB1bmRlcmxpbmUgaW4gJHN0eWxlc1xyXG4iLCIvLyBzdHlsdXMgLVUgLXUgbmliIC1vIGNzcyAtLXNvdXJjZW1hcC1pbmxpbmUgLS1ob2lzdC1hdHJ1bGVzIHJlZGRpdC1yZWFkYWJpbGl0eS5zdHlsXHJcbi8vIEBpbXBvcnQgbmliXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kdGV4dC1mb250ID0gJ01lcnJpd2VhdGhlciBTYW5zJ1xyXG4kbW9ub3NwYWNlLWZvbnQgPSBNb25hY28sIENvbnNvbGFzLCAnTHVjaWRhIENvbnNvbGUnLCBtb25vc3BhY2VcclxuXHJcbiR0ZXh0LXNpemUgPSAxNHB0XHJcbiRsaW5lLWhlaWdodCA9IDEuNDRlbVxyXG5cclxuJHRleHQtY29sb3VyID0gYmxhY2tcclxuXHJcbiRsaW5rLWNvbG91ciA9ICMwNWZcclxuJGxpbmstdW5kZXJsaW5lLWNvbG91ciA9IGxpZ2h0ZW4oJGxpbmstY29sb3VyLCA1MCUpXHJcbiRsaW5rLXZpc2l0ZWQtY29sb3VyID0gI2I0OFxyXG4kbGluay1ib3JkZXItY29sb3VyID0gI2NjY1xyXG4vLyAkbGluay12aXNpdGVkLWNvbG91ciA9ICNjNjBcclxuXHJcbiRidXR0b24tY29sb3VyID0gIzQ5ZlxyXG4kYnV0dG9uLXZpc2l0ZWQtY29sb3VyID0gI2M2MFxyXG5cclxuJGJvcmRlci1saWdodC1jb2xvdXIgPSAjYmJiXHJcbiRib3JkZXItbWVkaXVtLWNvbG91ciA9ICM4ODhcclxuXHJcbiRibG9ja3F1b3RlLWNvbG91ciA9IGJsYWNrXHJcbiRibG9ja3F1b3RlLWJhY2tncm91bmQtY29sb3VyID0gI2RkZFxyXG4kYmxvY2txdW90ZS1ib3JkZXItY29sb3VyID0gIzQ0NFxyXG5cclxuJG5ldy1jb21tZW50LWJhY2tncm91bmQtY29sb3VyID0gI2ZkZVxyXG4kbmV3LWNvbW1lbnRzLWxpbmstY29sb3VyID0gI2JiYlxyXG5cclxuJGZvY3VzLWl0ZW0taGlnaGxpZ2h0LWNvbG91ciA9ICRsaW5rLXVuZGVybGluZS1jb2xvdXJcclxuXHJcbiRjb21tZW50LXBhZCA9IDZweFxyXG4kdGV4dGFyZWEtcGFkID0gMC40ZW1cclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyBAaW1wb3J0IHVybCh3ZWItZm9udCgnTWVycml3ZWF0aGVyIFNhbnMnKSlcclxudXNlLXdlYi1mb250KCdNZXJyaXdlYXRoZXIgU2FucycpXHJcblxyXG5ib2R5XHJcbiAgc3RhbmRhcmQtdHlwZS1zZXR0aW5ncygpXHJcblxyXG4gIC8vIGZvbnQtZmFtaWx5OiAnTWVycml3ZWF0aGVyIFNhbnMnLCBzYW5zLXNlcmlmXHJcbiAgZm9udC1zaXplOiAkdGV4dC1zaXplXHJcbiAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodFxyXG4gIGNvbG9yOiAkdGV4dC1jb2xvdXJcclxuXHJcbiAgY3Vyc29yOiBhdXRvICFpbXBvcnRhbnRcclxuXHJcblxyXG5wcmVcclxuY29kZVxyXG50dFxyXG5rYmRcclxuc2FtcFxyXG4gIGZvbnQ6IG5vcm1hbCAkdGV4dC1zaXplLyRsaW5lLWhlaWdodCAkbW9ub3NwYWNlLWZvbnRcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLSBMaW5rIGNvbG91cnMgLS0tXHJcblxyXG5hXHJcbiAgbGluay1jb2xvdXIoJGxpbmstY29sb3VyLCAkbGluay12aXNpdGVkLWNvbG91cilcclxuXHJcbi5zZWFyY2gtcmVzdWx0LW1ldGEgYVxyXG4udGFnbGluZSBhXHJcbi50aGluZyBhLnRpdGxlXHJcbiAgQGV4dGVuZHMgYVxyXG5cclxuLm1kIGE6bm90KC5leHBhbmRvLWJ1dHRvbilcclxuICBsaW5rLXVuZGVybGluZSgkbGluay1jb2xvdXIsICRsaW5rLXZpc2l0ZWQtY29sb3VyKVxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tIFRleHQgc2l6ZXMgLS0tXHJcblxyXG4ubWRcclxuICAmXHJcbiAgLi10ZXh0XHJcbiAgcHJlID4gY29kZVxyXG4gIGxpXHJcbiAgcFxyXG4gIHRleHRhcmVhXHJcbiAgdGhcclxuICB0ZFxyXG4gICAgZm9udC1zaXplOiBpbmhlcml0XHJcblxyXG5cclxuLnVzZXJ0ZXh0XHJcbi5tZC1jb250YWluZXJcclxuLm1kLWNvbnRhaW5lci1zbWFsbFxyXG4gIGZvbnQtc2l6ZTogaW5oZXJpdFxyXG5cclxuXHJcbi5jb21tZW50aW5nQXNcclxuICBmb250LXNpemU6IDAuOWVtXHJcblxyXG5cclxuLnRhZ2xpbmVcclxuLmZsYXQtbGlzdFxyXG4uc2VhcmNoLXJlc3VsdC1tZXRhXHJcbi5SRVNEaWFsb2dTbWFsbFxyXG4ubWVudWFyZWFcclxuLm1vcmVjb21tZW50cyBhXHJcbiAgZm9udC1zaXplOiAwLjhlbVxyXG5cclxuXHJcbi5kb21haW5cclxuICBmb250LXNpemU6IDAuN2VtXHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gTGF5b3V0IC0tLVxyXG5cclxuLnNpZGVcclxuICBvdmVyZmxvdy14OiBoaWRkZW5cclxuICBwb3NpdGlvbjogcmVsYXRpdmVcclxuICB6LWluZGV4OiAyXHJcbiAgbWFyZ2luLXJpZ2h0OiAtMjk1cHhcclxuICByaWdodDogLTMwMHB4XHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gSXRlbXMgLS0tXHJcblxyXG4udGhpbmdcclxuICBwb3NpdGlvbjogcmVsYXRpdmVcclxuXHJcbiAgLnRpdGxlXHJcbiAgICBmb250LXdlaWdodDogYm9sZFxyXG4gICAgZm9udC1zaXplOiBpbmhlcml0XHJcbiAgICBsaW5lLWhlaWdodDogMmVtXHJcblxyXG5cclxuLmVudHJ5XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlXHJcbiAgbWFyZ2luOiAwXHJcbiAgcGFkZGluZzogJGNvbW1lbnQtcGFkICgkY29tbWVudC1wYWQgKiAxLjUpICRjb21tZW50LXBhZCAzMHB4XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZFxyXG4gIGJvcmRlci13aWR0aDogMnB4XHJcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudFxyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3hcclxuXHJcbiAgJi5SRVMta2V5TmF2LWFjdGl2ZUVsZW1lbnRcclxuICAgIC8vIHBhZGRpbmc6ICgkY29tbWVudC1wYWQgLSAycHgpICgkY29tbWVudC1wYWQgKiAxLjUgLSAycHgpICgkY29tbWVudC1wYWQgLSAycHgpIDI4cHhcclxuICAgIC8vIGJvcmRlcjogc29saWQgMnB4ICRmb2N1cy1pdGVtLWhpZ2hsaWdodC1jb2xvdXIgIWltcG9ydGFudFxyXG4gICAgYm9yZGVyLWNvbG9yOiAkZm9jdXMtaXRlbS1oaWdobGlnaHQtY29sb3VyXHJcbiAgICB6LWluZGV4OiAyXHJcbiAgICBtYXJnaW46IC00cHggLTlweCAtNXB4IC01cHhcclxuICAgIHBhZGRpbmc6IDEwcHggMThweCAxMXB4IDM1cHhcclxuXHJcbiAgLmZsYXQtbGlzdCBsaSBhXHJcbiAgYS5naXZlLWdvbGRcclxuICAgIGNvbG9yOiBkZXNhdHVyYXRlKCRsaW5rLWNvbG91ciwgNTAlKVxyXG4gICAgZm9udC1zaXplOiBpbmhlcml0XHJcblxyXG4gICAgJjphZnRlclxyXG4gICAgICBkaXNwbGF5OiBub25lXHJcblxyXG5cclxuLm1kXHJcbiAgY29sb3I6IGluaGVyaXRcclxuICBtYXgtd2lkdGg6IDEwMCVcclxuXHJcbiAgLmxpbmtsaXN0aW5nICZcclxuICAuY29tbWVudGFyZWEgJlxyXG4gICAgbWFyZ2luOiAwLjVlbSAwLjI1ZW0gMCAwXHJcblxyXG4gIGJsb2NrcXVvdGVcclxuICAgIG1hcmdpbjogMC41ZW0gMFxyXG4gICAgcGFkZGluZzogMC40ZW0gMC41ZW0gMC4yNWVtXHJcbiAgICBib3JkZXItbGVmdDogc29saWQgMnB4ICRibG9ja3F1b3RlLWJvcmRlci1jb2xvdXJcclxuXHJcbiAgICBjb2xvcjogJGJsb2NrcXVvdGUtY29sb3VyXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxvY2txdW90ZS1iYWNrZ3JvdW5kLWNvbG91clxyXG4gICAgZm9udC1zdHlsZTogaXRhbGljXHJcblxyXG5cclxuLmV4cGFuZC1pbmxpbmVcclxuICBtYXJnaW4tbGVmdDogLTIwcHhcclxuXHJcblxyXG4ub3JnYW5pYy1saXN0aW5nXHJcbiAgLmxpbmsgLmVudHJ5XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lXHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMFxyXG5cclxuICAuc3BvbnNvcmVkLXRhZ2xpbmVcclxuICAgIGRpc3BsYXk6IG5vbmVcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLSBQb3N0cyAtLS1cclxuXHJcbi5saW5rXHJcbiAgJi5sYXN0LWNsaWNrZWRcclxuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50XHJcblxyXG4gIC5lbnRyeVxyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJGxpbmstYm9yZGVyLWNvbG91clxyXG5cclxuICAgICYuUkVTLWtleU5hdi1hY3RpdmVFbGVtZW50XHJcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRmb2N1cy1pdGVtLWhpZ2hsaWdodC1jb2xvdXJcclxuXHJcbiAgICAuZmxhdC1saXN0XHJcbiAgICAgIGZsb2F0OiByaWdodFxyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwLjVlbVxyXG4gICAgICBsaW5lLWhlaWdodDogMi40ZW1cclxuXHJcbiAgICAgICtiZWxvdygzKVxyXG4gICAgICAgIGZsb2F0OiBub25lXHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMHB4XHJcblxyXG4gICAgICBhLmNvbW1lbnRzXHJcbiAgICAgICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnRcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLWNvbG91clxyXG4gICAgICAgIC8vIGJvcmRlcjogc29saWQgMnB4ICRidXR0b24tY29sb3VyXHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnRcclxuICAgICAgICBwYWRkaW5nOiA0cHggNnB4IDRweCAhaW1wb3J0YW50XHJcblxyXG4gICAgICAgIC5uZXdDb21tZW50c1xyXG4gICAgICAgICAgY29sb3I6ICRuZXctY29tbWVudHMtbGluay1jb2xvdXJcclxuICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpY1xyXG5cclxuICAgICAgICAmOmhvdmVyXHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGJ1dHRvbi1jb2xvdXIsIDUwJSkgIWltcG9ydGFudFxyXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXHJcblxyXG4gICAgICAgICY6dmlzaXRlZFxyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJ1dHRvbi12aXNpdGVkLWNvbG91ciAhaW1wb3J0YW50XHJcblxyXG4gICAgICAgICAgJjpob3ZlclxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGJ1dHRvbi12aXNpdGVkLWNvbG91ciwgNTAlKSAhaW1wb3J0YW50XHJcblxyXG5cclxuICAudGh1bWJuYWlsXHJcbiAgLm1pZGNvbFxyXG4gICAgbWFyZ2luLXRvcDogNXB4ICFpbXBvcnRhbnRcclxuXHJcbiAgLnRodW1ibmFpbC5zZWxmXHJcbiAgICBkaXNwbGF5OiBub25lXHJcblxyXG4gIC50YWdsaW5lXHJcbiAgICBmbG9hdDogbGVmdFxyXG4gICAgbGluZS1oZWlnaHQ6IDIuNGVtXHJcblxyXG4gIC5mbGFpclxyXG4gIC5saW5rZmxhaXJsYWJlbFxyXG4gICAgZGlzcGxheTogaW5saW5lXHJcbiAgICBmb250LXNpemU6IDAuNmVtXHJcbiAgICBwYWQoKVxyXG5cclxuICAgICY6ZW1wdHlcclxuICAgICAgZGlzcGxheTogbm9uZVxyXG5cclxuXHJcbiAgLnVzZXJ0ZXh0LWJvZHlcclxuICAgIHBhZGRpbmctdG9wOiAwLjhlbVxyXG5cclxuICAgIC5tZFxyXG4gICAgICBib3JkZXI6IDBcclxuICAgICAgYm9yZGVyLXJhZGl1czogaW5pdGlhbFxyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0XHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gQ29tbWVudHMgLS0tXHJcblxyXG4uY29tbWVudFxyXG4gIC5taWRjb2xcclxuICAgIGFic29sdXRlOiB0b3AgMC41ZW0gbGVmdCA3LjVweFxyXG4gICAgd2lkdGg6IDI1cHhcclxuICAgIGZsb2F0OiBub25lXHJcbiAgICBtYXJnaW46IDBcclxuICAgIHotaW5kZXg6IDRcclxuXHJcbiAgICAuYXJyb3dcclxuICAgICAgbWFyZ2luOiAwIDAgMC41ZW1cclxuXHJcbiAgICAgICY6YmVmb3JlXHJcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50XHJcblxyXG4gIC5wYXJlbnRcclxuICAgIG1hcmdpbi1sZWZ0OiAzMHB4XHJcblxyXG4gIC5lbnRyeVxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdFxyXG5cclxuICAua2V5TmF2QW5ub3RhdGlvblxyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50XHJcblxyXG4gIC50YWdsaW5lXHJcbiAgICBkaXNwbGF5OiBibG9ja1xyXG4gICAgYm9yZGVyLWJvdHRvbTogZG90dGVkIDFweCAkYm9yZGVyLW1lZGl1bS1jb2xvdXJcclxuICAgIHBhZGRpbmctYm90dG9tOiAwLjNlbVxyXG4gICAgbWFyZ2luLWJvdHRvbTogQHBhZGRpbmctYm90dG9tXHJcbiAgICB6LWluZGV4OiAyMFxyXG5cclxuICAgIC5zY29yZVxyXG4gICAgICBmb250LXdlaWdodDogYm9sZFxyXG5cclxuICAubW9yZWNoaWxkcmVuIC50YWdsaW5lXHJcbiAgICBib3JkZXItYm90dG9tOiAwXHJcblxyXG4gIC5mbGF0LWxpc3RcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b21cclxuXHJcbiAgICB6LWluZGV4OiA4XHJcbiAgICBvcGFjaXR5OiAwLjVcclxuXHJcbiAgICArbm90LWRlc2t0b3AoKVxyXG4gICAgICBtYXJnaW46IDAuNWVtIDAgMFxyXG4gICAgICBwYWQoKVxyXG4gICAgICBib3JkZXItdG9wOiBkb3R0ZWQgMXB4ICRib3JkZXItbWVkaXVtLWNvbG91clxyXG5cclxuICAgICtkZXNrdG9wKClcclxuICAgICAgYWJzb2x1dGU6IHRvcCAwLjVlbSByaWdodCAwLjc1ZW1cclxuICAgICAgZm9udC1zaXplOiAwLjdlbVxyXG5cclxuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuXHJcblxyXG4gICYuUkVTLWtleU5hdi1hY3RpdmVUaGluZ1xyXG4gICAgPiAuZW50cnkgLmZsYXQtbGlzdFxyXG4gICAgICArbm90LWRlc2t0b3AoKVxyXG4gICAgICAgIG9wYWNpdHk6IDFcclxuXHJcbiAgICAgICtkZXNrdG9wKClcclxuICAgICAgICBvcGFjaXR5OiAwLjc1XHJcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZVxyXG5cclxuICAgICYgPiAuZW50cnkgLmZsYXQtbGlzdDpob3ZlclxyXG4gICAgICBvcGFjaXR5OiAxXHJcblxyXG4gIC50YWdsaW5lOmVtcHR5XHJcbiAgLmNoaWxkOmVtcHR5XHJcbiAgICBkaXNwbGF5OiBub25lXHJcblxyXG5cclxuLnByb2ZpbGUtcGFnZSAubGlua2xpc3RpbmdcclxuICAuY29tbWVudFxyXG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW1cclxuICAgIHBvc2l0aW9uOiBzdGF0aWNcclxuXHJcbiAgICAmOm50aC1jaGlsZCg0bisxKVxyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0XHJcblxyXG5cclxuLm5ld0NvbW1lbnRzXHJcbiAgY29sb3I6ICR0ZXh0LWNvbG91clxyXG5cclxuXHJcbi5uZXctY29tbWVudFxyXG4gIC51c2VydGV4dC1ib2R5XHJcbiAgICBib3JkZXI6IG5vbmVcclxuXHJcbiAgICAubWRcclxuICAgICAgcGFkZGluZyA0cHggMCAwXHJcblxyXG4gICZcclxuICAmLlJFUy1rZXlOYXYtYWN0aXZlVGhpbmdcclxuICAgIC51c2VydGV4dC1ib2R5Lm1kLWNvbnRhaW5lclxyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbmV3LWNvbW1lbnQtYmFja2dyb3VuZC1jb2xvdXIgIWltcG9ydGFudFxyXG5cclxuXHJcbi5lZGl0ZWQtdGltZXN0YW1wXHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnRcclxuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudFxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tIEVkaXRvci9wcmV2aWV3IGFyZWEgLS0tXHJcblxyXG4udXNlcnRleHQtZWRpdFxyXG4gIHdpZHRoOiA4MDBweCAhaW1wb3J0YW50XHJcbiAgbWF4LXdpZHRoOiA5MCUgIWltcG9ydGFudFxyXG4gIG1hcmdpbjogMC43NWVtIDAgMCAwLjVlbVxyXG4gIGZvbnQtc2l6ZTogaW5oZXJpdFxyXG5cclxuICB0ZXh0YXJlYVtuYW1lID0gdGV4dF1cclxuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnRcclxuICAgIG1pbi1oZWlnaHQ6IDhlbVxyXG4gICAgcGFkZGluZzogJHRleHRhcmVhLXBhZCAoJHRleHRhcmVhLXBhZCAqIDEuNSlcclxuICAgIGJvcmRlcjogc29saWQgMXB4ICRib3JkZXItbWVkaXVtLWNvbG91clxyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXRcclxuICAgIGZvbnQtc2l6ZTogMC45ZW1cclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLSBSRVMgU3R5bGluZyAtLS1cclxuXHJcbiNzci1oZWFkZXItYXJlYVxyXG4gIGhlaWdodDogYXV0byAhaW1wb3J0YW50XHJcbiAgYVxyXG4gICAgZm9udC1zaXplOiAxMHB0ICFpbXBvcnRhbnRcclxuXHJcblxyXG4jUkVTU2hvcnRjdXRzVmlld3BvcnRcclxuICBtYXgtaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnRcclxuICBvdmVyZmxvdy15OiB2aXNpYmxlICFpbXBvcnRhbnRcclxuXHJcblxyXG4jaGVhZGVyXHJcbiAgbWluLWhlaWdodDogODBweFxyXG5cclxuXHJcbiNoZWFkZXItYm90dG9tLWxlZnRcclxuICBhYnNvbHV0ZTogYm90dG9tIDFweCBsZWZ0XHJcblxyXG5cclxuI2hlYWRlci1ib3R0b20tcmlnaHRcclxuICBtYXJnaW4tdG9wOiAzcHhcclxuXHJcblxyXG4ucmVzLWNvbW1lbnRCb3hlc1xyXG4gIC5jb21tZW50XHJcbiAgICBwYWRkaW5nIDAgIWltcG9ydGFudFxyXG5cclxuXHJcbi5SRVNEaWFsb2dTbWFsbC5saXZlUHJldmlld1xyXG4gIHBhZCgpXHJcblxyXG4gICYgPiBoM1xyXG4gICAgYWJzb2x1dGU6IGJvdHRvbSBsZWZ0XHJcbiAgICByaWdodDogMFxyXG4gICAgbWFyZ2luOiAxMHB4IDAgMFxyXG4gICAgcGFkZGluZzogMC4yNWVtIDAuNWVtIDAgMC41ZW1cclxuICAgIGJvcmRlci1ib3R0b206IG5vbmVcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkYm9yZGVyLWxpZ2h0LWNvbG91clxyXG5cclxuICAmID4gLm1kXHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzZweFxyXG5cclxuICAuZ2Vhckljb25cclxuICAgIGZsb2F0OiBsZWZ0XHJcbiAgICBtYXJnaW46IC0wLjE1ZW0gMC41ZW0gMCAwXHJcblxyXG5cclxuLlJFUy1rZXlOYXYtYWN0aXZlRWxlbWVudFxyXG4gICZcclxuICAmIC5tZC1jb250YWluZXJcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQgIWltcG9ydGFudFxyXG5cclxuI2tleUhlbHBcclxuICB3aWR0aDogNDgwcHhcclxuICBmb250LXNpemU6IDEycHRcclxuXHJcbiAgdGQ6Zmlyc3QtY2hpbGRcclxuICAgIHdpZHRoOiAxMjBweFxyXG4iLCJ1c2UoJy4uL25vZGVzL3ZlbmRvci1oZWxwZXJzLmpzJylcbkBpbXBvcnQgJ2NvbmZpZydcblxuLypcbiAqIEFsaWFzIFwibm93cmFwXCIgYXMgXCJuby13cmFwXCIuXG4gKi9cblxubm8td3JhcCA9IHVucXVvdGUoJ25vd3JhcCcpXG5cbi8qXG4gKiBIZWxwZXIgdG8gZmluZCBvdXQgaWYgYSBnaXZlbiB2YWx1ZSBpcyBhIHdpZHRoXG4gKi9cblxuaXMtd2lkdGgodmFsKVxuICBpZiBhdXRvID09IHZhbFxuICAgIHJldHVybiB0cnVlXG4gIGVsc2UgaWYgdmFsICYmICd1bml0JyA9PSB0eXBlKHZhbClcbiAgICAvLyBTdHlsdXMgZG9lcyBub3Qgc2hvcnQgY2lyY3VpdCBzbyB3ZSBuZWVkIHRvIHBlcmZvcm0gdGhpcyBhcyBhIGRpc3RpbmN0XG4gICAgLy8gb3BlcmF0aW9uIHRvIHByZXZlbnQgZXJyb3JzXG4gICAgcmV0dXJuICcnICE9IHVuaXQodmFsKVxuICByZXR1cm4gZmFsc2VcblxuLypcbiAqIFZlbmRvciBzdXBwb3J0IGZvciB0aGUgZ2l2ZW4gcHJvcCAvIGFyZ3VtZW50cywgb3B0aW9uYWxseSBzcGVjaWZ5aW5nIHRoZVxuICogb25seSBwcmVmaXhlcyB0byB1dGlsaXplLCBvciB0aG9zZSB3aGljaCBzaG91bGQgYmUgaWdub3JlZC5cbiAqL1xuXG52ZW5kb3IocHJvcCwgYXJncywgb25seSA9IG51bGwsIGlnbm9yZSA9IG51bGwsIHZlbmRvci1wcm9wZXJ0eSA9IHRydWUpXG4gIG5lZWRfbm9ybWFsaXplID0gIXZlbmRvci1wcm9wZXJ0eSBvciBwcm9wIGluICgndHJhbnNpdGlvbicgJ3RyYW5zaXRpb24tcHJvcGVydHknICdib3JkZXItaW1hZ2UnICdib3JkZXItaW1hZ2Utc2xpY2UnKVxuICBmb3IgcHJlZml4IGluIHZlbmRvci1wcmVmaXhlc1xuICAgIHVubGVzcyAob25seSBhbmQgIShwcmVmaXggaW4gb25seSkpIG9yIChpZ25vcmUgYW5kIHByZWZpeCBpbiBpZ25vcmUpXG4gICAgICBpZiBvZmZpY2lhbCA9PSBwcmVmaXhcbiAgICAgICAgaWYgbmVlZF9ub3JtYWxpemVcbiAgICAgICAgICB7cHJvcH06IG5vcm1hbGl6ZShwcm9wLCgnJXMnICUgYXJncykpXG4gICAgICAgIGVsc2VcbiAgICAgICAgICB7cHJvcH06IGFyZ3NcbiAgICAgIGVsc2VcbiAgICAgICAgbmV3cHJvcCA9IHByb3BcbiAgICAgICAgbmV3cHJvcCA9ICctJyArIHByZWZpeCArICctJyArIHByb3AgaWYgdmVuZG9yLXByb3BlcnR5XG5cbiAgICAgICAgaWYgbmVlZF9ub3JtYWxpemVcbiAgICAgICAgICB7bmV3cHJvcH06IG5vcm1hbGl6ZShwcm9wLCgnJXMnICUgYXJncykscHJlZml4KVxuICAgICAgICBlbHNlXG4gICAgICAgICAge25ld3Byb3B9OiBhcmdzXG4vKlxuICogVmVuZG9yaXplIHRoZSBnaXZlbiB2YWx1ZS5cbiAqL1xuXG52ZW5kb3ItdmFsdWUoYXJnLCBvbmx5ID0gbnVsbCwgaWdub3JlID0gbnVsbClcbiAgcHJvcCA9IGN1cnJlbnQtcHJvcGVydHlbMF1cbiAgZm9yIHByZWZpeCBpbiB2ZW5kb3ItcHJlZml4ZXNcbiAgICB1bmxlc3MgKG9ubHkgYW5kICEocHJlZml4IGluIG9ubHkpKSBvciAoaWdub3JlIGFuZCBwcmVmaXggaW4gaWdub3JlKSBvciBvZmZpY2lhbCA9PSBwcmVmaXhcbiAgICAgIGFkZC1wcm9wZXJ0eShwcm9wLCAnLSVzLSVzJyAlIChwcmVmaXggYXJnKSlcbiAgYXJnXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtc2hhZG93XCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtc2hhZG93KClcbiAgdmVuZG9yKCdib3gtc2hhZG93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ1c2VyLXNlbGVjdFwiIHN1cHBvcnQuXG4gKi9cblxudXNlci1zZWxlY3QoKVxuICB2ZW5kb3IoJ3VzZXItc2VsZWN0JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLWNvdW50XCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tY291bnQoKVxuICB2ZW5kb3IoJ2NvbHVtbi1jb3VudCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1nYXBcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1nYXAoKVxuICB2ZW5kb3IoJ2NvbHVtbi1nYXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZVwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGUtY29sb3JcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlLWNvbG9yKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZS1jb2xvcicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1ydWxlLXdpZHRoXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tcnVsZS13aWR0aCgpXG4gIHZlbmRvcignY29sdW1uLXJ1bGUtd2lkdGgnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZS1zdHlsZVwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUtc3R5bGUoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlLXN0eWxlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXdpZHRoXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4td2lkdGgoKVxuICB2ZW5kb3IoJ2NvbHVtbi13aWR0aCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1zcGFuXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tc3BhbigpXG4gIHZlbmRvcignY29sdW1uLXNwYW4nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1maWxsXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tZmlsbCgpXG4gIHZlbmRvcignY29sdW1uLWZpbGwnLCBhcmd1bWVudHMsIG9ubHk6IG1veilcblxuLypcbiAqIExlZ2FjeSBzeW50YXggc3VwcG9ydCBmb3IgYmFja2dyb3VuZC1jbGlwIGFuZCBiYWNrZ3JvdW5kLW9yaWdpblxuICovXG5cbmxlZ2FjeS1iZy12YWx1ZXMocHJvcGVydHksIGFyZ3MpXG4gIGxlZ2FjeV9hcmdzID0gKClcbiAgaW1wb3J0YW5jZSA9IHVucXVvdGUoJycpXG4gIGZvciBzdWJhcmdzIGluIGFyZ3NcbiAgICBmb3IgYXJnIGluIHN1YmFyZ3NcbiAgICAgIGlmIGFyZyBpbiAoYm9yZGVyLWJveCBwYWRkaW5nLWJveCBjb250ZW50LWJveClcbiAgICAgICAgYXJnID0gdW5xdW90ZSgnYm9yZGVyJykgIGlmIGFyZyA9PSBib3JkZXItYm94XG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ3BhZGRpbmcnKSBpZiBhcmcgPT0gcGFkZGluZy1ib3hcbiAgICAgICAgYXJnID0gdW5xdW90ZSgnY29udGVudCcpIGlmIGFyZyA9PSBjb250ZW50LWJveFxuICAgICAgaWYgYXJnICE9ICchaW1wb3J0YW50J1xuICAgICAgICBwdXNoKGxlZ2FjeV9hcmdzLGFyZylcbiAgICAgIGVsc2VcbiAgICAgICAgaW1wb3J0YW5jZSA9ICFpbXBvcnRhbnRcbiAgdmVuZG9yKHByb3BlcnR5LCB1bnF1b3RlKGpvaW4oJywgJyxsZWdhY3lfYXJncykpIGltcG9ydGFuY2UsIG9ubHk6IG1veiB3ZWJraXQpXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZ3JvdW5kLWNsaXBcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtY2xpcCgpXG4gIGlmIGFyZ3VtZW50c1swXSA9PSB0ZXh0XG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kLWNsaXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdClcbiAgZWxzZVxuICAgIGxlZ2FjeS1iZy12YWx1ZXMoJ2JhY2tncm91bmQtY2xpcCcsIGFyZ3VtZW50cylcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IGFyZ3VtZW50c1xuXG4vKlxuICogVmVuZG9yIFwiYmFja2dyb3VuZC1vcmlnaW5cIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtb3JpZ2luKClcbiAgbGVnYWN5LWJnLXZhbHVlcygnYmFja2dyb3VuZC1vcmlnaW4nLCBhcmd1bWVudHMpXG4gIGJhY2tncm91bmQtb3JpZ2luOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJhY2tncm91bmQtc2l6ZVwiIHN1cHBvcnQuXG4gKi9cblxuYmFja2dyb3VuZC1zaXplKClcbiAgdmVuZG9yKCdiYWNrZ3JvdW5kLXNpemUnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2Zvcm1cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zZm9ybSgpXG4gIHZlbmRvcigndHJhbnNmb3JtJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNmb3JtLW9yaWdpblwiIHN1cHBvcnQuXG4gKi9cbnRyYW5zZm9ybS1vcmlnaW4oKVxuICAgIHZlbmRvcigndHJhbnNmb3JtLW9yaWdpbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zZm9ybS1zdHlsZVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNmb3JtLXN0eWxlKClcbiAgdmVuZG9yKCd0cmFuc2Zvcm0tc3R5bGUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3JkZXItaW1hZ2VcIiBzdXBwb3J0LlxuICovXG5cbmJvcmRlci1pbWFnZSgpXG4gIHZlbmRvcignYm9yZGVyLWltYWdlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG8gb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2l0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi1wcm9wZXJ0eVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi1wcm9wZXJ0eSgpXG4gIHZlbmRvcigndHJhbnNpdGlvbi1wcm9wZXJ0eScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tZHVyYXRpb25cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tZHVyYXRpb24oKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tZHVyYXRpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvblwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24oKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi1kZWxheVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi1kZWxheSgpXG4gIHZlbmRvcigndHJhbnNpdGlvbi1kZWxheScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImJhY2tmYWNlLXZpc2liaWxpdHlcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tmYWNlLXZpc2liaWxpdHkoKVxuICB2ZW5kb3IoJ2JhY2tmYWNlLXZpc2liaWxpdHknLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJwZXJzcGVjdGl2ZVwiIHN1cHBvcnQuXG4gKi9cblxucGVyc3BlY3RpdmUoKVxuICBpZiBtaXhpblxuICAgIHZlbmRvcigncGVyc3BlY3RpdmUnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG4gIGVsc2VcbiAgICAncGVyc3BlY3RpdmUoJXMpJyAlIGFyZ3VtZW50c1xuXG4vKlxuICogVmVuZG9yIFwicGVyc3BlY3RpdmUtb3JpZ2luXCIgc3VwcG9ydC5cbiAqL1xuXG5wZXJzcGVjdGl2ZS1vcmlnaW4oKVxuICB2ZW5kb3IoJ3BlcnNwZWN0aXZlLW9yaWdpbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIE9wYWNpdHkgd2l0aCBjb25kaXRpb25hbCBJRSBzdXBwb3J0LlxuICovXG5cbm9wYWNpdHkobiwgYXJncy4uLilcbiAgb3BhY2l0eTogbiBhcmdzXG4gIGlmIHN1cHBvcnQtZm9yLWllXG4gICAgaWYgbiA9PSBpbmhlcml0IG9yIG4gPT0gaW5pdGlhbFxuICAgICAgLW1zLWZpbHRlcjogbiBhcmdzXG4gICAgICBmaWx0ZXI6IG4gYXJnc1xuICAgIGVsc2VcbiAgICAgIHZhbCA9IHJvdW5kKG4gKiAxMDApXG4gICAgICBpZiB2YWwgPT0gMTAwXG4gICAgICAgIC1tcy1maWx0ZXI6IG5vbmUgYXJnc1xuICAgICAgICBmaWx0ZXI6IG5vbmUgYXJnc1xuICAgICAgZWxzZVxuICAgICAgICAtbXMtZmlsdGVyOiAnXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0lcylcIicgJSB2YWwgYXJnc1xuICAgICAgICBmaWx0ZXI6ICdhbHBoYShvcGFjaXR5PSVzKScgJSB2YWwgYXJnc1xuXG4vKlxuICogVmVuZG9yIFwidGV4dC1zaXplLWFkanVzdFwiXG4gKi9cblxudGV4dC1zaXplLWFkanVzdCgpXG4gIHZlbmRvcigndGV4dC1zaXplLWFkanVzdCcsIGFyZ3VtZW50cylcblxuLypcbiAqIEFsaWFzIHRoZSBcIndoaXRlLXNwYWNlXCIgcHJvcGVydHkuXG4gKi9cblxud2hpdGVzcGFjZSgpXG4gIHdoaXRlLXNwYWNlOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJveC1zaXppbmdcIiBzdXBwb3J0LlxuICovXG5cbmJveC1zaXppbmcoKVxuICB2ZW5kb3IoJ2JveC1zaXppbmcnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtb3JpZW50XCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtb3JpZW50KClcbiAgdmVuZG9yKCdib3gtb3JpZW50JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LWZsZXgtZ3JvdXBcIiBzdXBwb3J0LlxuICovXG5cbmJveC1mbGV4LWdyb3VwKClcbiAgdmVuZG9yKCdib3gtZmxleC1ncm91cCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1vcmRpbmFsLWdyb3VwXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtb3JkaW5hbC1ncm91cCgpXG4gIHZlbmRvcignYm94LW9yZGluYWwtZ3JvdXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cblxuLypcbiAqIFZlbmRvciBcImJveC1hbGlnblwiIHN1cHBvcnQuXG4gKi9cblxuYm94LWFsaWduKClcbiAgdmVuZG9yKCdib3gtYWxpZ24nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtcGFja1wiIHN1cHBvcnQuXG4gKi9cblxuYm94LXBhY2soKVxuICB2ZW5kb3IoJ2JveC1wYWNrJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LWRpcmVjdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYm94LWRpcmVjdGlvbigpXG4gIHZlbmRvcignYm94LWRpcmVjdGlvbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uKClcbiAgdmVuZG9yKCdhbmltYXRpb24nLCBhcmd1bWVudHMpXG5cblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1uYW1lXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tbmFtZSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLW5hbWUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZHVyYXRpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1kdXJhdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uLWR1cmF0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWRlbGF5XCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZGVsYXkoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1kZWxheScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1kaXJlY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1kaXJlY3Rpb24oKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1kaXJlY3Rpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24taXRlcmF0aW9uLWNvdW50XCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24taXRlcmF0aW9uLWNvdW50KClcbiAgdmVuZG9yKCdhbmltYXRpb24taXRlcmF0aW9uLWNvdW50JywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1wbGF5LXN0YXRlXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tcGxheS1zdGF0ZSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLXBsYXktc3RhdGUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZmlsbC1tb2RlXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZmlsbC1tb2RlKClcbiAgdmVuZG9yKCdhbmltYXRpb24tZmlsbC1tb2RlJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiaHlwaGVuc1wiIHN1cHBvcnQuXG4gKi9cblxuaHlwaGVucygpXG4gIHZlbmRvcignaHlwaGVucycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImFwcGVhcmFuY2VcIiBzdXBwb3J0LlxuICovXG5cbmFwcGVhcmFuY2UoKVxuICB2ZW5kb3IoJ2FwcGVhcmFuY2UnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0YWItc2l6ZVwiIHN1cHBvcnQuXG4gKi9cblxudGFiLXNpemUoKVxuICB2ZW5kb3IoJ3RhYi1zaXplJywgYXJndW1lbnRzLCBvbmx5OiBtb3ogbyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcIm92ZXJmbG93LXNjcm9sbGluZ1wiIHN1cHBvcnQuXG4gKi9cblxub3ZlcmZsb3ctc2Nyb2xsaW5nKClcbiAgdmVuZG9yKCdvdmVyZmxvdy1zY3JvbGxpbmcnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcInRleHQtb3ZlcmZsb3dcIiBzdXBwb3J0LCAsIC1vLSBmb3Igb3BlcmEgOS4qIC0gMTAuKlxuICovXG5cbnRleHQtb3ZlcmZsb3coKVxuICB2ZW5kb3IoJ3RleHQtb3ZlcmZsb3cnLCBhcmd1bWVudHMsIG9ubHk6IG9mZmljaWFsIG8pXG5cbi8qXG4gKiBWZW5kb3IgXCJ0ZXh0LXNpemUtYWRqdXN0XCIgc3VwcG9ydC5cbiAqL1xudGV4dC1zaXplLWFkanVzdCgpXG4gIHZlbmRvcigndGV4dC1zaXplLWFkanVzdCcsIGFyZ3VtZW50cywgb25seTogb2ZmaWNpYWwgd2Via2l0IG1zKVxuXG4vKlxuICogVmVuZG9yIFwiZm9udC1zbW9vdGhpbmdcIiBzdXBwb3J0LCB3ZWJraXQgb25seS5cbiAqL1xuZm9udC1zbW9vdGhpbmcoKVxuICB2ZW5kb3IoJ2ZvbnQtc21vb3RoaW5nJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQpXG5cblxuLyoqXG4gKiBWZW5kb3IgaW5wdXQtcGxhY2Vob2xkZXIvcGxhY2Vob2xkZXIgc3VwcG9ydC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqICAgIC8vIERlZmF1bHQgc3ludGF4XG4gKiAgICBib2R5XG4gKiAgICAgIHBsYWNlaG9sZGVyKGNvbG9yICMzMzMsIGZvbnQtd2VpZ2h0IG5vcm1hbClcbiAqXG4gKiAgICAvLyBUaGUgY29tbWEgaXMgaW1wb3J0YW50XG4gKiAgICAucGxhY2Vob2xkZXItcmVkXG4gKiAgICAgIHBsYWNlaG9sZGVyKGNvbG9yIHJlZCwpXG4gKlxuICogICAgLy8gV2UgY2FuIHBhc3MgYSBmdW5jdGlvblxuICogICAgZ3JlZW4tcGxhY2Vob2xkZXIoKVxuICogICAgICBjb2xvciBncmVlblxuICogICAgLnBsYWNlaG9sZGVyLWdyZWVuXG4gKiAgICAgIHBsYWNlaG9sZGVyKGdyZWVuLXBsYWNlaG9sZGVyKVxuICpcbiAqICAgIC8vIFdlIGNhbiBwYXNzIGEgaGFzaFxuICogICAgdGV4dGFyZWFcbiAqICAgICAgcGxhY2Vob2xkZXIoKGZvbnQtc3R5bGUgaXRhbGljKSAoZm9udC13ZWlnaHQgYm9sZCkgKHBhZGRpbmcgJzRweCAxMHB4JykpXG4gKi9cbnBsYWNlaG9sZGVyKClcbiAgZm9yIHYgaW4gJzotd2Via2l0LWlucHV0JyAnLW1veicgJzotbW96JyAnLW1zLWlucHV0J1xuICAgICY6e3Z9LXBsYWNlaG9sZGVyXG4gICAgICBmb3IgcGFpciBpbiBhcmd1bWVudHNcbiAgICAgICAgaWYgdHlwZW9mKHBhaXIpID09ICdmdW5jdGlvbidcbiAgICAgICAgICBwYWlyKClcbiAgICAgICAgZWxzZSBpZiBwYWlyIGlzIG5vdCBudWxsICYmIHBhaXJbMF0gaXMgbm90IG51bGxcbiAgICAgICAgICB7cGFpclswXX06IHR5cGUocGFpclsxXSkgPT0gJ3N0cmluZycgPyBzKHBhaXJbMV0pIDogcGFpclsxXVxuaW5wdXQtcGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlclxuXG4vKlxuICogVmVuZG9yIGJhY2tncm91bmQgc3VwcG9ydCAoZ3JhZGllbnRzKS5cbiAqL1xuXG5iYWNrZ3JvdW5kKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2JhY2tncm91bmQnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBiYWNrZ3JvdW5kIGFyZ3VtZW50c1xuXG5iYWNrZ3JvdW5kLWltYWdlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2JhY2tncm91bmQtaW1hZ2UnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBiYWNrZ3JvdW5kLWltYWdlIGFyZ3VtZW50c1xuXG5jdXJzb3IoKVxuICBpZiBtYXRjaCgnLWdyYWRpZW50XFwoJywgJycrYXJndW1lbnRzKVxuICAgIHZlbmRvcignY3Vyc29yJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgY3Vyc29yIGFyZ3VtZW50c1xuXG5saXN0LXN0eWxlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2xpc3Qtc3R5bGUnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBsaXN0LXN0eWxlIGFyZ3VtZW50c1xuXG5saXN0LXN0eWxlLWltYWdlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2xpc3Qtc3R5bGUtaW1hZ2UnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBsaXN0LXN0eWxlLWltYWdlIGFyZ3VtZW50c1xuIiwiLypcbiAqIFNpemUgdXRpbGl0eS5cbiAqXG4gKiBTeW5vcHNpczpcbiAqXG4gKiAgIHNpemU6IDx3aWR0aD4gPGhlaWdodD4gfCA8d2lkdGggJiBoZWlnaHQ+XG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIHNpemU6IDEwMCUgMzBweFxuICogICAgICAgeWllbGRzOlxuICogICAgICAgICB3aWR0aDogMTAwJVxuICogICAgICAgICBoZWlnaHQ6IDMwcHhcbiAqXG4gKiAgICAgc2l6ZTogNXB4XG4gKiAgICAgICB5aWVsZHM6XG4gKiAgICAgICAgIHdpZHRoOiA1cHhcbiAqICAgICAgICAgaGVpZ2h0OiA1cHhcbiAqXG4gKi9cblxuc2l6ZSgpXG4gIGlmIGxlbmd0aChhcmd1bWVudHMpID09IDFcbiAgICB3aWR0aDogYXJndW1lbnRzWzBdXG4gICAgaGVpZ2h0OiBhcmd1bWVudHNbMF1cbiAgZWxzZVxuICAgIHdpZHRoOiBhcmd1bWVudHNbMF1cbiAgICBoZWlnaHQ6IGFyZ3VtZW50c1sxXVxuIiwiXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiRfc2NhbGVzID0ge1xyXG4gIHBhZGRpbmc6ICAgIDAuNWVtLFxyXG4gIG1hcmdpbjogICAgIDFlbSxcclxuICBzaGFkb3c6ICAgICB7XHJcbiAgICBzaXplOiAgICAgICAwLjVlbSxcclxuICAgIG9wYWNpdHk6ICAgIDAuNzVcclxuICB9XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8qXHJcbmJvZHlcclxuICBwYWQgMmVtXHJcbmRpdlxyXG4gIHBhZCAxZW0sIHBhZGRpbmcgbWFyZ2luXHJcbiovXHJcblxyXG5wYWQoJHR5cGVzID0gcGFkZGluZywgJHBhZCA9ICRfc2NhbGVzLnBhZGRpbmcsICRtZ24gPSAkX3NjYWxlcy5tYXJnaW4pXHJcbiAgcGFkZGluZyAoJHBhZCAvIDIpICRwYWQgaWYgcGFkZGluZyBpbiAkdHlwZXNcclxuICBtYXJnaW4gKCRtZ24gLyAyKSAkbWduIGlmIG1hcmdpbiBpbiAkdHlwZXNcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5zaGFkb3coJHNpemUgPSAkX3NjYWxlcy5zaGFkb3cuc2l6ZSwgJG9wYWNpdHkgPSAkX3NjYWxlcy5zaGFkb3cuc2l6ZSlcclxuICBib3gtc2hhZG93ICgkc2l6ZSAqIDAuNSkgJHNpemUgKCRzaXplICogMS41KSAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgJG9wYWNpdHkpXHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLypcclxuYVxyXG4gIGxpbmstY29sb3VyKCMwNWYsICNjNjApXHJcbmJcclxuICBsaW5rLWNvbG91cigjMDVmLCAkdW5kZXJsaW5lOiBub25lKVxyXG5jXHJcbiAgbGluay1jb2xvdXIoIzA1ZiwgI2M2MCwgYm90aClcclxuKi9cclxuXHJcbmxpbmstY29sb3VyKCRjb2xvdXIsICR2aXNpdGVkID0gJGNvbG91ciwgJHVuZGVybGluZSA9IGhvdmVyKVxyXG4gIGNvbG9yOiAkY29sb3VyXHJcblxyXG4gICRvZmYgPSBvZmYgbm9uZSBob3ZlclxyXG5cclxuICBpZiAkdW5kZXJsaW5lIGluICRvZmZcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxyXG4gIGVsc2VcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lXHJcblxyXG4gICY6dmlzaXRlZFxyXG4gICAgY29sb3I6ICR2aXNpdGVkXHJcblxyXG4gICY6aG92ZXJcclxuICAgICRvbiA9IG9uIGJvdGggaG92ZXJcclxuXHJcbiAgICBpZiAkdW5kZXJsaW5lIGluICRvblxyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZVxyXG4gICAgZWxzZVxyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5saW5rLXVuZGVybGluZSgkdW5kZXJsaW5lLWNvbG91ciA9IGN1cnJlbnRDb2xvciwgJHZpc2l0ZWQtY29sb3VyID0gI2M2MClcclxuICAvLyBjb2xvcjogJHVuZGVybGluZS1jb2xvdXJcclxuXHJcbiAgJlxyXG4gICY6bGlua1xyXG4gICAgY29sb3I6IGluaGVyaXRcclxuXHJcbiAgcGFkZGluZy1ib3R0b206IDFweFxyXG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkXHJcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMnB4XHJcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgkdW5kZXJsaW5lLWNvbG91ciwgMC41KVxyXG5cclxuICAmOnZpc2l0ZWRcclxuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoJHZpc2l0ZWQtY29sb3VyLCAwLjUpXHJcblxyXG4gICZcclxuICAmOmhvdmVyXHJcbiAgJjpsaW5rXHJcbiAgJjp2aXNpdGVkXHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcclxuXHJcbiAgJjpob3ZlclxyXG4gICAgY29sb3I6ICR1bmRlcmxpbmUtY29sb3VyXHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZS1pbiAwLjI1c1xyXG5cclxuICAgICY6dmlzaXRlZFxyXG4gICAgICBjb2xvcjogJHZpc2l0ZWQtY29sb3VyXHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxucGxhY2Vob2xkZXIoKVxyXG4gICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJcclxuICAgIHtibG9ja31cclxuXHJcbiAgJjotbW96LXBsYWNlaG9sZGVyXHJcbiAgICB7YmxvY2t9XHJcblxyXG4gICY6Oi1tb3otcGxhY2Vob2xkZXJcclxuICAgIHtibG9ja31cclxuXHJcbiAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXJcclxuICAgIHtibG9ja31cclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5zZWxlY3Rpb24oJGNvbG9yLCAkYmFja2dyb3VuZClcclxuICAmOjpzZWxlY3Rpb25cclxuICAgIGNvbG9yOiAkY29sb3JcclxuICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kXHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuYmFzZS1jb3JlKCR0ZXh0LWZvbnQtZmFtaWx5LCAkZm9udC1zaXplID0gMTRwdClcclxuICBAaW1wb3J0IHVybChnZXQtd2ViLWZvbnQtdXJsKCR0ZXh0LWZvbnQtZmFtaWx5KSlcclxuXHJcbiAgaHRtbFxyXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplXHJcblxyXG4gIGJvZHlcclxuICAgIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250LWZhbWlseVxyXG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodFxyXG4gICAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiwgXCJkbGlnXCJcclxuXHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCVcclxuICAgIGZvbnQtc2l6ZS1hZGp1c3Q6ICRmb250LXNpemVcclxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHRcclxuXHJcbiAgICB3b3JkLXNwYWNpbmc6IG5vcm1hbFxyXG4gICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbFxyXG5cclxuICAgIGNvbG9yOiAkdGV4dC1jb2xvdXJcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG91clxyXG5cclxuICAgIC8vIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXHJcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5XHJcblxyXG4gICAgaW1hZ2UtcmVuZGVyaW5nOiAtd2Via2l0LW9wdGltaXplLWNvbnRyYXN0XHJcbiAgICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBuZWFyZXN0LW5laWdoYm9yXHJcbiAgICBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzXHJcblxyXG4gICAgY3Vyc29yOiBhdXRvICFpbXBvcnRhbnRcclxuXHJcbiAgcHJlXHJcbiAgY29kZVxyXG4gIHR0XHJcbiAga2JkXHJcbiAgc2FtcFxyXG4gICAgZm9udDogbm9ybWFsIGluaGVyaXQgJG1vbm9zcGFjZS1mb250XHJcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0XHJcblxyXG4gIHByZVxyXG4gICAgd2hpdGUtc3BhY2UgcHJlLXdyYXBcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5iYXNlLWxpbmtzKClcclxuICBhXHJcbiAgICBsaW5rLWNvbG91cigkbGluay1jb2xvdXIsICRsaW5rLXZpc2l0ZWQtY29sb3VyKVxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmJhc2UtcHJlKClcclxuICBwcmVcclxuICB0ZXh0YXJlYVxyXG4gICAgbWFyZ2luOiAxZW0gMCAxZW0gMmVtXHJcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW1cclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQ0ZW1cclxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcFxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxubm9ybWFsaXNlKClcclxuICBAaW5jbHVkZSAuL25vcm1hbGlzZVxyXG4iLCIvKlxuICogVmVuZG9yIFwiZGlzcGxheTogZmxleFwiIHN1cHBvcnQgd2l0aCBmYWxsYmFjayB0byBvYnNvbGV0ZSB2ZXJzaW9ucy5cbiAqL1xuXG5mbGV4LXZlcnNpb24gPz0gYm94IGZsZXhcblxuLy9cbi8vIDEuIERpc3BsYXkgdmFsdWVzXG4vLyAgICAtIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtZmxleGJveC8jZmxleC1jb250YWluZXJzXG4vL1xuZGlzcGxheSh0eXBlLCBhcmdzLi4uKVxuICBpZiBmbGV4ID09IHR5cGUgfHwgaW5saW5lLWZsZXggPT0gdHlwZVxuICAgIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICAgIGlmIGZsZXggPT0gdHlwZVxuICAgICAgICBkaXNwbGF5OiAtbXMtZmxleGJveCBhcmdzXG4gICAgICAgIGRpc3BsYXk6IHZlbmRvci12YWx1ZShib3ggYXJncywgb25seTogbW96IHdlYmtpdClcbiAgICAgIGVsc2VcbiAgICAgICAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94IGFyZ3NcbiAgICAgICAgZGlzcGxheTogdmVuZG9yLXZhbHVlKGlubGluZS1ib3ggYXJncywgb25seTogbW96IHdlYmtpdClcbiAgICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgICAgZGlzcGxheTogdmVuZG9yLXZhbHVlKGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKSAvLyBvdmVyd3JpdGVzIG9sZCB3ZWJraXRcbiAgZWxzZVxuICAgIGRpc3BsYXk6IGFyZ3VtZW50c1xuXG4vKlxuICogTmV3IHN5bnRheCBmb3IgYnJvd3NlcnMgbGlrZSBHb29nbGUgQ2hyb21lLlxuICogUGx1cyBhIHRyYW5zbGF0aW9uIHRvIHRoZSBvbGQgc3ludGF4LCBpZiBwb3NzaWJsZS5cbiAqL1xuXG5cbi8vXG4vLyA1LiBPcmRlcmluZyBhbmQgT3JpZW50YXRpb25cbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNvcmRlcmluZy1hbmQtb3JpZW50YXRpb25cbi8vXG4tZmxleC1vYnNvbGV0ZS1kaXJlY3Rpb24oZGlyZWN0aW9uKVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgaWYgcm93LXJldmVyc2UgPT0gZGlyZWN0aW9uIHx8IGNvbHVtbi1yZXZlcnNlID09IGRpcmVjdGlvblxuICAgICAgdmVuZG9yKCdib3gtZGlyZWN0aW9uJywgcmV2ZXJzZSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAgIGlmIHJvdyA9PSBkaXJlY3Rpb24gfHwgcm93LXJldmVyc2UgPT0gZGlyZWN0aW9uXG4gICAgICB2ZW5kb3IoJ2JveC1vcmllbnQnLCBob3Jpem9udGFsLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuICAgIGVsc2UgaWYgY29sdW1uID09IGRpcmVjdGlvbiB8fCBjb2x1bW4tcmV2ZXJzZSA9PSBkaXJlY3Rpb25cbiAgICAgIHZlbmRvcignYm94LW9yaWVudCcsIHZlcnRpY2FsLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4tZmxleC1vYnNvbGV0ZS13cmFwKHZhbHVlKVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgLy8gV0FSTjogd3JhcC1yZXZlcnNlIGRvZXMgbm90IGhhdmUgYSBib3ggZXF1aXZhbGVudC4gVGhpcyB3aWxsIHJlbmRlciBpbiBkaWZmZXJlbnQgbWFubmVyc1xuICAgIC8vICAgIG9uIGJveCB2cy4gZmxleCB2YWx1ZXMuXG4gICAgaWYgJ3dyYXAnID09IHZhbHVlIHx8IHdyYXAtcmV2ZXJzZSA9PSB2YWx1ZVxuICAgICAgdmVuZG9yKCdib3gtbGluZXMnLCBtdWx0aXBsZSwgaWdub3JlOiBtcyBvZmZpY2lhbClcbiAgICBlbHNlIGlmIG5vd3JhcCA9PSB2YWx1ZVxuICAgICAgdmVuZG9yKCdib3gtbGluZXMnLCBzaW5nbGUsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbmZsZXgtZGlyZWN0aW9uKGRpcmVjdGlvbilcbiAgLy8gb2Jzb2xldGVcbiAgLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGRpcmVjdGlvbilcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtZGlyZWN0aW9uJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cbmZsZXgtd3JhcCh2YWx1ZSlcbiAgLy8gb2Jzb2xldGVcbiAgLWZsZXgtb2Jzb2xldGUtd3JhcCh2YWx1ZSlcblxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC13cmFwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cbmZsZXgtZmxvdygpXG4gIC8vIG9ic29sZXRlXG4gIC1mbGV4LW9ic29sZXRlLWRpcmVjdGlvbihhcmd1bWVudHNbMF0pXG4gIC1mbGV4LW9ic29sZXRlLWRpcmVjdGlvbihhcmd1bWVudHNbMV0pXG4gIC1mbGV4LW9ic29sZXRlLXdyYXAoYXJndW1lbnRzWzBdKVxuICAtZmxleC1vYnNvbGV0ZS13cmFwKGFyZ3VtZW50c1sxXSlcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtZmxvdycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1zIG9mZmljaWFsKVxuXG5cbm9yZGVyKClcbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYm94LW9yZGluYWwtZ3JvdXAnLCBhcmd1bWVudHMsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LW9yZGVyJywgYXJndW1lbnRzLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ29yZGVyJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cblxuLy9cbi8vIDcuIEZsZXhpYmlsaXR5XG4vLyAgICAtIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtZmxleGJveC8jZmxleGliaWxpdHlcbi8vXG5mbGV4LWdyb3coZ3Jvd3RoKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtZmxleCcsIGdyb3d0aClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtZ3JvdycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5mbGV4LWJhc2lzKClcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtYmFzaXMnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuZmxleC1zaHJpbmsoKVxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1zaHJpbmsnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuZmxleChncm93dGgpXG5cbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHNocmluayA9IDFcblxuICAgIGlmIG5vbmUgPT0gZ3Jvd3RoIHx8IGluaXRpYWwgPT0gZ3Jvd3RoXG4gICAgICAvLyBXZWxsIGtub3duIHZhbHVlc1xuICAgICAgc2hyaW5rID0gMCBpZiBub25lID09IGdyb3d0aFxuICAgICAgZ3Jvd3RoID0gMFxuICAgIGVsc2UgaWYgaXMtd2lkdGgoZ3Jvd3RoKSA9PSB0cnVlXG4gICAgICAvLyBCYXNpcyBpcyBkZWZpbmVkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXJcbiAgICAgIGdyb3d0aCA9IGFyZ3VtZW50c1sxXSB8fCAwXG4gICAgICBzaHJpbmsgPSBhcmd1bWVudHNbMl0gaWYgMyA8PSBsZW5ndGgoYXJndW1lbnRzKVxuICAgIGVsc2UgaWYgYXJndW1lbnRzWzFdICYmIGlzLXdpZHRoKGFyZ3VtZW50c1sxXSkgPT0gZmFsc2VcbiAgICAgIC8vIEdyb3d0aCBpcyBmaXJzdCBhbmQgc2hyaW5rIGlzIHNlY29uZFxuICAgICAgc2hyaW5rID0gYXJndW1lbnRzWzFdXG5cbiAgICAvLyBTaW5jZSB3ZSBjYW4ndCBtYWtlIHRoZSBkaXN0aW5jdGlvbiBiZXR3ZWVuIGdyb3dpbmcgYW5kIHNocmlua2luZyBpbiB0aGUgYm94IG1vZGVsLCB0YWtlXG4gICAgLy8gdGhlIG9uZSB0aGF0IHByb3ZpZGVzIHRoZSBtb3N0IGZsZXhpYmlsaXR5LlxuICAgIHZlbmRvcignYm94LWZsZXgnLCBtYXgoZ3Jvd3RoLCBzaHJpbmspLCBpZ25vcmU6IG1zKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1zIG9mZmljaWFsKVxuXG5cbi8vIGNvbnZlcnRzIHRoZSBqdXN0aWZpY2F0aW9uIGFsaWdubWVudFxuLWNvbnZlcnQtanVzdGlmeShhbGlnbilcbiAgaWYgZmxleC1zdGFydCA9PSBhbGlnblxuICAgIHJldHVybiBzdGFydFxuICBlbHNlIGlmIGZsZXgtZW5kID09IGFsaWduXG4gICAgcmV0dXJuIGVuZFxuICBlbHNlIGlmIHNwYWNlLWFyb3VuZCA9PSBhbGlnblxuICAgIHJldHVybiBkaXN0cmlidXRlXG4gIGVsc2UgaWYgc3BhY2UtYmV0d2VlbiA9PSBhbGlnblxuICAgIHJldHVybiBqdXN0aWZ5XG4gIGVsc2VcbiAgICByZXR1cm4gYWxpZ25cblxuLy9cbi8vIDguIEFsaWdubWVudFxuLy8gICAgLSBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI2FsaWdubWVudFxuLy9cbmp1c3RpZnktY29udGVudChhbGlnbilcbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYm94LXBhY2snLCAtY29udmVydC1qdXN0aWZ5KGFsaWduKSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtcGFjaycsIC1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ2p1c3RpZnktY29udGVudCcsIGFsaWduLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmFsaWduLWNvbnRlbnQoYWxpZ24pXG4gIC8vIFdBUk46IE9ic29sZXRlIHNwZWMgZG9lcyBub3QgYWxsb3cgZm9yIGFkanVzdG1lbnQgaGVyZVxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1saW5lLXBhY2snLCAtY29udmVydC1qdXN0aWZ5KGFsaWduKSwgb25seTogbXMpXG4gICAgdmVuZG9yKCdhbGlnbi1jb250ZW50JywgYWxpZ24sIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuLy8gY29udmVydHMgYWxpZ25tZW50IGZyb20gJ2ZsZXgnIHRvIG5vcm1hbCB2YWx1ZVxuLWNvbnZlcnQtYWxpZ25tZW50KGFsaWduKVxuICBpZiBmbGV4LXN0YXJ0ID09IGFsaWduXG4gICAgcmV0dXJuIHN0YXJ0XG4gIGVsc2UgaWYgZmxleC1lbmQgPT0gYWxpZ25cbiAgICByZXR1cm4gZW5kXG4gIGVsc2VcbiAgICByZXR1cm4gYWxpZ25cblxuYWxpZ24taXRlbXMoYWxpZ24pXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2JveC1hbGlnbicsIC1jb252ZXJ0LWFsaWdubWVudChhbGlnbiksIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWFsaWduJywgLWNvbnZlcnQtYWxpZ25tZW50KGFsaWduKSwgb25seTogbXMpXG4gICAgdmVuZG9yKCdhbGlnbi1pdGVtcycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5hbGlnbi1zZWxmKGFsaWduKVxuICAvLyBXQVJOOiBPYnNvbGV0ZSBzcGVjIGRvZXMgbm90IGFsbG93IGZvciBvdmVycmlkaW5nIGFsaWdubWVudCBvbiBpbmRpdmlkdWFsIGl0ZW1zLlxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYWxpZ24tc2VsZicsIGFsaWduLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG4gICAgdmVuZG9yKCdmbGV4LWl0ZW0tYWxpZ24nLCAtY29udmVydC1hbGlnbm1lbnQoYWxpZ24pLCBvbmx5OiBtcylcbiIsIi8qXG4gKiBib3JkZXI6IDxjb2xvcj5cbiAqIGJvcmRlcjogLi4uXG4gKi9cblxuYm9yZGVyKGNvbG9yLCBhcmdzLi4uKVxuICBpZiBjb2xvciBpcyBhICdjb2xvcidcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvciBhcmdzXG4gIGVsc2VcbiAgICBib3JkZXI6IGFyZ3VtZW50c1xuIiwiLypcbiAqIEhlbHBlciBmb3IgYm9yZGVyLXJhZGl1cygpLlxuICovXG5cbi1hcHBseS1ib3JkZXItcmFkaXVzKHBvcywgaW1wb3J0YW5jZSlcbiAgaWYgbGVuZ3RoKHBvcykgPT0gM1xuICAgIC8vIGJvcmRlci1yYWRpdXM6IDx0b3AgfCBib3R0b20+IDxsZWZ0IHwgcmlnaHQ+IDxuPlxuICAgIHkgPSBwb3NbMF1cbiAgICB4ID0gcG9zWzFdXG4gICAgLy8gV2UgZG9uJ3QgdXNlIHZlbmRvciBmb3IgYm9kZXItcmFkaXVzIGFueW1vcmVcbiAgICAvLyB2ZW5kb3IoJ2JvcmRlci1yYWRpdXMtJXMlcycgJSBwb3MsIHBvc1syXSwgb25seTogd2Via2l0IG9mZmljaWFsKVxuICAgIHsnYm9yZGVyLSVzLSVzLXJhZGl1cycgJSBwb3N9OiBwb3NbMl0gaW1wb3J0YW5jZVxuICBlbHNlIGlmIHBvc1swXSBpbiAodG9wIGJvdHRvbSlcbiAgICAvLyBib3JkZXItcmFkaXVzOiA8dG9wIHwgYm90dG9tPiA8bj5cbiAgICAtYXBwbHktYm9yZGVyLXJhZGl1cyhwb3NbMF0gbGVmdCBwb3NbMV0sIGltcG9ydGFuY2UpXG4gICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zWzBdIHJpZ2h0IHBvc1sxXSwgaW1wb3J0YW5jZSlcbiAgZWxzZSBpZiBwb3NbMF0gaW4gKGxlZnQgcmlnaHQpXG4gICAgLy8gYm9yZGVyLXJhZGl1czogPGxlZnQgfCByaWdodD4gPG4+XG4gICAgdW5zaGlmdChwb3MsIHRvcCk7XG4gICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zLCBpbXBvcnRhbmNlKVxuICAgIHBvc1swXSA9IGJvdHRvbVxuICAgIC1hcHBseS1ib3JkZXItcmFkaXVzKHBvcywgaW1wb3J0YW5jZSlcblxuLypcbiAqIGJvcmRlci1yYWRpdXMgc3VwcG9ydGluZyBhdWdtZW50ZWQgYmVoYXZpb3IuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgYm9yZGVyLXJhZGl1czogMnB4IDVweFxuICogICAgYm9yZGVyLXJhZGl1czogdG9wIDVweCBib3R0b20gMTBweFxuICogICAgYm9yZGVyLXJhZGl1czogbGVmdCA1cHhcbiAqICAgIGJvcmRlci1yYWRpdXM6IHRvcCBsZWZ0IDVweFxuICogICAgYm9yZGVyLXJhZGl1czogdG9wIGxlZnQgMTBweCBib3R0b20gcmlnaHQgNXB4XG4gKiAgICBib3JkZXItcmFkaXVzOiB0b3AgbGVmdCAxMHB4LCBib3R0b20gcmlnaHQgNXB4XG4gKlxuICovXG5cbmJvcmRlci1yYWRpdXMoKVxuICBwb3MgPSAoKVxuICBhdWdtZW50ZWQgPSBmYWxzZVxuICBpbXBvcnRhbmNlID0gYXJndW1lbnRzW2xlbmd0aChhcmd1bWVudHMpIC0gMV0gPT0gIWltcG9ydGFudCA/ICFpbXBvcnRhbnQgOiB1bnF1b3RlKCcnKVxuXG4gIGZvciBhcmdzIGluIGFyZ3VtZW50c1xuICAgIGZvciBhcmcgaW4gYXJnc1xuICAgICAgaWYgYXJnIGlzIGEgJ2lkZW50J1xuICAgICAgICBhcHBlbmQocG9zLCBhcmcpXG4gICAgICAgIGF1Z21lbnRlZCA9IHRydWVcbiAgICAgIGVsc2VcbiAgICAgICAgYXBwZW5kKHBvcywgYXJnKVxuICAgICAgICBpZiBhdWdtZW50ZWRcbiAgICAgICAgICAtYXBwbHktYm9yZGVyLXJhZGl1cyhwb3MsIGltcG9ydGFuY2UpXG4gICAgICAgICAgcG9zID0gKClcbiAgYm9yZGVyLXJhZGl1cyBwb3MgdW5sZXNzIGF1Z21lbnRlZFxuIiwiLy8gaGVscGVyXG5cbi1wb3ModHlwZSwgYXJncylcbiAgaSA9IDBcbiAgcG9zaXRpb246IHVucXVvdGUodHlwZSlcbiAgZm9yIGogaW4gKDEuLjQpXG4gICAgaWYgbGVuZ3RoKGFyZ3MpID4gaVxuICAgICAge2FyZ3NbaV19OiBhcmdzW2kgKyAxXSBpcyBhICd1bml0JyA/IGFyZ3NbaSArPSAxXSA6IDBcbiAgICBpICs9IDFcblxuLypcbiAqIFBvc2l0aW9uIHV0aWxpdHkuXG4gKlxuICogU3lub3BzaXM6XG4gKlxuICogICBmaXhlZDogPHBvcz4gW25dIDxwb3M+IFtuXVxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICBmaXhlZDogdG9wIGxlZnRcbiAqICAgICBmaXhlZDogdG9wIDVweCBsZWZ0XG4gKiAgICAgZml4ZWQ6IHRvcCBsZWZ0IDVweFxuICogICAgIGZpeGVkOiB0b3AgNXB4IGxlZnQgNXB4XG4gKlxuICovXG5cbmZpeGVkKClcbiAgLXBvcygnZml4ZWQnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBQb3NpdGlvbiB1dGlsaXR5LlxuICpcbiAqIFN5bm9wc2lzOlxuICpcbiAqICAgYWJzb2x1dGU6IDxwb3M+IFtuXSA8cG9zPiBbbl1cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgYWJzb2x1dGU6IHRvcCBsZWZ0XG4gKiAgICAgYWJzb2x1dGU6IHRvcCA1cHggbGVmdFxuICogICAgIGFic29sdXRlOiB0b3AgbGVmdCA1cHhcbiAqICAgICBhYnNvbHV0ZTogdG9wIDVweCBsZWZ0IDVweFxuICpcbiAqL1xuXG5hYnNvbHV0ZSgpXG4gIC1wb3MoJ2Fic29sdXRlJywgYXJndW1lbnRzKVxuXG4vKlxuICogUG9zaXRpb24gdXRpbGl0eS5cbiAqXG4gKiBTeW5vcHNpczpcbiAqXG4gKiAgIHJlbGF0aXZlOiA8cG9zPiBbbl0gPHBvcz4gW25dXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIHJlbGF0aXZlOiB0b3AgbGVmdFxuICogICAgIHJlbGF0aXZlOiB0b3AgNXB4IGxlZnRcbiAqICAgICByZWxhdGl2ZTogdG9wIGxlZnQgNXB4XG4gKiAgICAgcmVsYXRpdmU6IHRvcCA1cHggbGVmdCA1cHhcbiAqXG4gKi9cblxucmVsYXRpdmUoKVxuICAtcG9zKCdyZWxhdGl2ZScsIGFyZ3VtZW50cylcbiIsIlxyXG4kYnJlYWtwb2ludHMgPSB4cyBzbSBtZCBsZyB4bFxyXG5cclxuJGJwLXJhbmdlcyA9IHtcclxuICB4czoge1xyXG4gICAgbWF4OiAoJGJyZWFrcG9pbnQteHMgLSAxcHgpXHJcbiAgfSxcclxuICBzbToge1xyXG4gICAgbWluOiAkYnJlYWtwb2ludC14cyxcclxuICAgIG1heDogKCRicmVha3BvaW50LXNtIC0gMXB4KVxyXG4gIH0sXHJcbiAgbWQ6IHtcclxuICAgIG1pbjogJGJyZWFrcG9pbnQtc20sXHJcbiAgICBtYXg6ICgkYnJlYWtwb2ludC1tZCAtIDFweClcclxuICB9LFxyXG4gIGxnOiB7XHJcbiAgICBtaW46ICRicmVha3BvaW50LW1kLFxyXG4gICAgbWF4OiAoJGJyZWFrcG9pbnQtbGcgLSAxcHgpXHJcbiAgfSxcclxuICB4bDoge1xyXG4gICAgbWluOiAkYnJlYWtwb2ludC1sZ1xyXG4gIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLWlzLWJyZWFrcG9pbnQoJHYpXHJcbiAgcmV0dXJuICR2IGlzIGRlZmluZWQgYW5kICR2IGlzIGEgJ2lkZW50JyBhbmQgJHYgaW4gJGJyZWFrcG9pbnRzXHJcblxyXG4tbWluLXcoJGJwKVxyXG4gICgkYnAtcmFuZ2VzWyRicF0pLm1pblxyXG5cclxuLW1heC13KCRicClcclxuICAoJGJwLXJhbmdlc1skYnBdKS5tYXhcclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5yZXNwb25kKCRsb3csICRoaWdoKVxyXG4gICRsID0gKCRicC1yYW5nZXNbJGxvd10pLm1pbiBpZiAtaXMtYnJlYWtwb2ludCgkbG93KVxyXG4gICRoID0gKCRicC1yYW5nZXNbJGhpZ2hdKS5tYXggaWYgLWlzLWJyZWFrcG9pbnQoJGhpZ2gpXHJcblxyXG4gIGlmIC1pcy1icmVha3BvaW50KCRsb3cpIGFuZCAtaXMtYnJlYWtwb2ludCgkaGlnaClcclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogLW1pbi13KCRsb3cpKSBhbmQgKG1heC13aWR0aDogLW1heC13KCRoaWdoKSlcclxuICAgICAge2Jsb2NrfVxyXG4gIGVsc2UgaWYgLWlzLWJyZWFrcG9pbnQoJGxvdylcclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogLW1pbi13KCRsb3cpKVxyXG4gICAgICB7YmxvY2t9XHJcbiAgZWxzZSBpZiAtaXMtYnJlYWtwb2ludCgkaGlnaClcclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogLW1heC13KCRoaWdoKSlcclxuICAgICAge2Jsb2NrfVxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbnJlc3BvbmQtdG8oJGJwKVxyXG4gICtyZXNwb25kKG51bGwsICRicClcclxuICAgIHtibG9ja31cclxuXHJcbnJlc3BvbmQtZnJvbSgkYnApXHJcbiAgK3Jlc3BvbmQoJGJwLCBudWxsKVxyXG4gICAge2Jsb2NrfVxyXG5cclxucmVzcG9uZC1hdCgkYnApXHJcbiAgK3Jlc3BvbmQoJGJwLCAkYnApXHJcbiAgICB7YmxvY2t9XHJcblxyXG5yZXNwb25kLWJldHdlZW4oJGxvd2VyLCAkdXBwZXIpXHJcbiAgK3Jlc3BvbmQoJGxvd2VyLCAkdXBwZXIpXHJcbiAgICB7YmxvY2t9XHJcblxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxucmVzcG9uZC1yZXRpbmEoJHJhdGlvID0gMilcclxuICBAbWVkaWEgb25seSBzY3JlZW5cclxuICAgIEBtZWRpYSAobWluLWRldmljZS1waXhlbC1yYXRpbzogJHJhdGlvKSwgKG1pbi1yZXNvbHV0aW9uOiAkcmF0aW8gKiA5NmRwaSksIChtaW4tcmVzb2x1dGlvbjogdW5pdCgkcmF0aW8sICdkcHB4JykpXHJcbiAgICAgIHtibG9ja31cclxuXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kb3JpZW50YXRpb25zID0gcG9ydHJhaXQgbGFuZHNjYXBlXHJcblxyXG5yZXNwb25kLW9yaWVudCgkb3JpZW50YXRpb24pXHJcbiAgaWYgJG9yaWVudGF0aW9uIGluICRvcmllbnRhdGlvbnNcclxuICAgIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKVxyXG4gICAgICB7YmxvY2t9XHJcblxyXG5yZXNwb25kLXBvcnRyYWl0KClcclxuICBAbWVkaWEgYWxsIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KVxyXG4gICAge2Jsb2NrfVxyXG5cclxucmVzcG9uZC1sYW5kc2NhcGUoKVxyXG4gIEBtZWRpYSBhbGwgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKVxyXG4gICAge2Jsb2NrfVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZGVza3RvcCgpXHJcbiAgK3Jlc3BvbmQtZnJvbShtZClcclxuICAvLyBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NjBweClcclxuICAgIHtibG9ja31cclxuXHJcbm5vdC1kZXNrdG9wKClcclxuICArcmVzcG9uZC10byhzbSlcclxuICAvLyBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NjBweClcclxuICAgIHtibG9ja31cclxuXHJcbnRhYmxldCgpXHJcbiAgK3Jlc3BvbmQtYXQoc20pXHJcbiAgLy8gQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIGFuZCAobWF4LXdpZHRoOiA5NTlweClcclxuICAgIHtibG9ja31cclxuXHJcbm1vYmlsZSgpXHJcbiAgK3Jlc3BvbmQtdG8oeHMpXHJcbiAgLy8gQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpXHJcbiAgICB7YmxvY2t9XHJcbiJdfQ== */

.wish-list .product .detail a {
  font-size: 12pt !important;
}
#bd,
#hd {
  width: 88vw !important;
  margin-left: 6vw !important;
  margin-right: 6vw !important;
}
#bd {
  padding: 0 !important;
}
.layout,
.node {
  width: 100% !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
}
.m-sop-banner {
  margin: 0 auto !important;
}
.grid-c2-s5,
.row-c2-s7,
.detail-page #base,
.detail-page #extend {
  display: -webkit-flex !important;
  display: flex !important;
  -webkit-flex-flow: row nowrap !important;
  flex-flow: row nowrap !important;
}
.col-sub {
  -webkit-order: 0;
  order: 0;
  -webkit-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 0 !important;
  margin-right: 10px !important;
  float: none !important;
}
.col-main:not(.product-info-wrapper) {
  -webkit-order: 1;
  order: 1;
  -webkit-flex: 0 1 auto;
  flex: 0 1 auto;
  float: none !important;
}
.autosize_wrap .grid-c2-s5 .col-extra-p4p {
  -webkit-order: 2;
  order: 2;
  -webkit-flex: 0 0 200px;
  flex: 0 0 200px;
  margin-left: 10px !important;
  float: none !important;
}
.autosize_wrap .grid-c2-s5 .main-wrap,
.grid-c2-s5 .main-wrap,
.row-c2-s7 .main-wrap,
.base .main-wrap,
.extend .main-wrap {
  width: auto !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
}
.row-c2-s7 .col-sub {
  -webkit-flex: 0 0 250px !important;
  flex: 0 0 250px !important;
}
.m-sop-top-selling .items-list .img {
  margin-right: 10px !important;
}
.m-sop-top-selling .items-list .detail {
  float: none !important;
  width: auto !important;
}
.ui-fixed-panel {
  left: initial !important;
  right: 1vw !important;
}
#filter-options .filter-options-viewmore {
  display: none !important;
}
.keyword-ipt input,
.exception-ipt input {
  width: 160px !important;
}
.m-o-large-all-detail .items-list .item {
  width: 250px !important;
  margin-left: 0px !important;
  margin-right: 10px !important;
}
.m-o-large-all-detail .items-list .item .detail * {
  line-height: 1.44em !important;
}
.m-o-large-all-detail .items-list .item .tag-result {
  display: none !important;
}
.m-o-large-all-detail .items-list .item .cost {
  margin: 8px 0 4px !important;
}
#node-gallery .m-o-large-all-detail .items-list .item,
#node-gallery .m-o-large-all-detail .items-list .item:hover {
  padding: 8px 16px !important;
}
.ui-window.ui-window-normal {
  top: 2vh !important;
  max-height: 96vh !important;
  left: 50% !important;
  width: 84vw !important;
  margin-left: -42vw !important;
}
.ui-window.ui-window-normal .magnet-slide .ui-slidebox-slider li {
  max-width: 180px !important;
}
.ui-window.ui-window-normal .magnet-slide .ui-slidebox-slider > :nth-child(n + 2) {
  display: none !important;
}
.ui-window.ui-window-normal [data-role=content],
.ui-window.ui-window-normal .wl-dialog {
  overflow-y: hidden !important;
}
.ui-slidebox-container,
.ui-slidebox-slider {
  margin: 0 !important;
  margin-left: 0px !important;
  width: 100% !important;
}
.ui-slidebox-slider ul,
.ui-slidebox-slider ul li {
  display: inline-block !important;
  float: none !important;
}
.ui-slidebox-slider ul li {
  vertical-align: top !important;
}
#rpbk-from-thisseller .ui-slidebox-prev,
#rpbk-from-otherseller .ui-slidebox-prev,
.magnet-slide .ui-slidebox-prev,
#rpbk-from-thisseller .ui-slidebox-next,
#rpbk-from-otherseller .ui-slidebox-next,
.magnet-slide .ui-slidebox-next {
  display: none !important;
}
#rpbk-from-thisseller .ui-slidebox-slider li,
#rpbk-from-otherseller .ui-slidebox-slider li {
  float: none !important;
  display: inline-block !important;
  vertical-align: top;
}
.ui-slidebox-item {
  width: 100% !important;
  padding: 15px 0 !important;
}
.ui-slidebox-item-info {
  width: 90% !important;
  font-size: 13px !important;
  line-height: 1.3em !important;
}
.ui-cost {
  margin-top: 10px !important;
  font-size: 16px !important;
}
.wish-list-show,
.shopping-history-show,
.find-similar .name,
.gallery-mode .list-item h3,
a.ui-slidebox-item-title {
  height: auto !important;
}
.list-item .has-sku-image,
.list-item .report-item,
.list-item .store-name-chat,
.list-item .info .big-sale-wrap {
  display: none !important;
}
.list-item .info-more,
.list-item .store-name-chat {
  display: block !important;
}
.list-item .img a {
  vertical-align: top !important;
}
.gallery-mode .list-item {
  min-height: 520px !important;
}
.gallery-mode .item {
  min-height: 470px !important;
}
.m-o-large-all-detail .items-list .item .cost,
.m-o-large-all-detail .items-list .item .cost b {
  font-size: 18px !important;
}
#shop-refine {
  font-size: 10pt !important;
  line-height: 1.3em !important;
}
#refine-attr-wrap,
.selected-wrap,
.refine-wrap .attr.refine-hide {
  display: block !important;
}
#shop-refine > div:first-child,
.refine-wrap .more-attr-btn,
.refine-wrap .operation.refine-hide,
.refine-wrap .attr-wrap .operation {
  display: none !important;
}
.refine-wrap .attr-wrap .attr {
  padding: 3px 0 !important;
  height: auto !important;
}
.refine-wrap .attr-wrap .attr:nth-child(n + 2) .attr-key {
  margin-top: 6px !important;
}
.refine-wrap .attr-wrap .attr:nth-child(n + 2) .attr-values {
  margin-top: 1px !important;
}
.refine-wrap .attr-wrap .attr-key {
  margin-top: 12px !important;
}
.refine-wrap .attr-wrap .attr-values li {
  margin: 4px 39px 4px 0 !important;
}
.refine-wrap .selected-wrap .your-choice,
.refine-wrap .attr-wrap .attr-key {
  width: 140px !important;
}
.d99-assistants li {
  padding: 8px !important;
  width: 30% !important;
}
.deals99-btns,
.deals99-tab {
  bottom: 0.2em !important;
}
.d99-products-tab {
  bottom: 4.5em !important;
  z-index: 100000 !important;
}
#chnprice_search .tools-s1 .bd {
  height: 100% !important;
}
#chnprice_search .tools-s1 .bd .tool-item {
  font-size: 10pt !important;
  margin-right: 5px !important;
  width: 115px !important;
  -webkit-box-shadow: none !important;
  box-shadow: none !important;
  border: 1px solid #444 !important;
}
#chnprice_search .tools-s1 .bd .tool-item:last-child {
  margin-right: 0px !important;
}
#chnprice_search .tools-s1 .bd .tool-item .outs.shop_name {
  overflow: visible !important;
  height: 100% !important;
  line-height: 1.4em !important;
}
#chnprice_search .tools-s1 .hd .s-m {
  margin-right: 80px !important;
}
#chnprice_search .tools-s1 .hd .s-m .s-item a,
#chnprice_search .tools-s1 .hd .t-more a {
  font-size: 9pt !important;
}
#chnprice_search .tools-s1 .bd .tool-pic,
#chnprice_search .tools-s1 .bd .tool-pic img {
  width: 113px !important;
  height: auto !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

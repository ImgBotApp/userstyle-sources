body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  letter-spacing: normal;
  word-spacing: normal;
  font-size: 16px;
  line-height: 1.44em;
}
body,
.featherweight-heading {
  font-family: 'Segoe UI', 'Lucida Grande', sans-serif;
  font-weight: normal;
}
h1 {
  font-size: 2.7em;
}
h2,
.package-description {
  font-size: 1.7em;
  padding: 0.7em 0 0.3em;
}
h1,
h2,
h3,
h4,
h5,
h6,
.package-description {
  color: #000;
  font-family: 'Segoe UI Semibold', 'Segoe UI', 'Lucida Grande', sans-serif;
  font-weight: normal;
  line-height: 1.44em;
}
pre,
code,
kbd,
samp,
tt {
  font: normal 1em/1.44em Consolas, monospace;
}
body,
.box {
  color: #121314;
}
.content a,
#posts a {
  color: #37f;
  text-decoration: none;
}
.content a:visited,
#posts a:visited {
  color: #c39;
}
.content a:hover,
#posts a:hover {
  text-decoration: underline;
}
.content h1 a {
  color: #37f !important;
}
.markdown li {
  padding: 0.1em 0;
}
.search-results .package-details h3 {
  margin: 20px 0 0;
  padding: 0;
  padding-bottom: 5px;
}
.search-results .package-details p {
  margin-bottom: 5px;
}
.search-results .package-details .description,
.search-results .package-details .stats {
  font-size: inherit;
}
.search-results .package-details .description {
  color: #404040;
}
.search-results .package-details .stats,
.search-results .package-details .keywords {
  color: #808080;
}
.search-results .package-details .version {
  color: #bd33a4;
  font-weight: bold;
}
code {
  border: solid 1px #ddd;
  padding-left: 3px;
  padding-right: 3px;
}
code:hover {
  border-color: #aaa;
}
pre {
  color: #ff8;
  background-color: #121314;
  margin: 0.8em 1em 1.2em;
  padding: 0.25em 0.5em;
  -webkit-box-shadow: 0.3em 0.4em 0.2em 0 #bbb;
  box-shadow: 0.3em 0.4em 0.2em 0 #bbb;
  font-size: 0.9rem;
}
pre code {
  display: inline;
  overflow-wrap: break-word;
}
pre pre {
  white-space: pre-wrap;
}
pre code,
pre pre,
pre pre:hover {
  margin: 0px;
  border: none;
  padding: 0px;
  -webkit-box-shadow: none;
  box-shadow: none;
  background-color: transparent !important;
}
.highlight {
  color: #eee;
}
.highlight .comment {
  color: #0d9;
}
.highlight .variable.function {
  color: #e8000d;
}
.highlight .support.constant,
.highlight .support.function,
.highlight .support.type {
  color: #ddd;
}
.highlight .keyword,
.highlight .storage {
  color: #fdfd96;
}
.highlight .keyword.type + span,
.highlight .storage.type + span {
  color: #ddd;
}
.highlight .keyword.operator,
.highlight .meta.brace,
.highlight .meta.delimiter.method.period,
.highlight .meta.delimiter.object.comma,
.highlight .punctuation.terminator.statement,
.highlight .punctuation.section.scope {
  color: #ff91a4;
  font-weight: normal;
}
.highlight .storage.modifier + span,
.highlight .entity.name.function {
  color: #f77fbe;
}
.highlight .string.quoted,
.highlight .numeric,
.highlight .meta.structure.dictionary.json > .string.quoted.double.json,
.highlight .meta.structure.dictionary.json > .string.quoted.double.json .punctuation.string {
  color: #1e90ff;
}
.highlight .string .punctuation.section.embedded {
  color: #4dd;
  font-weight: inherit;
}
.highlight .punctuation.definition {
  color: #eee;
}
.highlight .meta.tag,
.highlight .entity.name.tag,
.highlight .punctuation.definition.tag {
  color: #7af;
}
.highlight .entity.other.attribute-name {
  color: #fdfd96;
  font-weight: inherit;
}
.highlight .string.unquoted.html {
  color: #f77fbe;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ucG0vbnBtanMuY29tLnN0eWwiLCJzcmMvX21peGlucy90eXBvZ3JhcGh5LnN0eWwiLCJzcmMvX21peGlucy9iYXNpY3Muc3R5bCIsIm5vZGVfbW9kdWxlcy9uaWIvbGliL25pYi9ib3JkZXIuc3R5bCIsIm5vZGVfbW9kdWxlcy9uaWIvbGliL25pYi92ZW5kb3Iuc3R5bCIsIm5vZGVfbW9kdWxlcy9uaWIvbGliL25pYi9mbGV4LnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJBO0VDYkUsd0JBQXdCLFlBQXhCO0VBQ0EseUJBQXlCLFVBQXpCO0VBQ0EsZ0JBQWdCLG1CQUFoQjtFQUVBLGdCQUFnQixPQUFoQjtFQUNBLGNBQWMsT0FBZDtFRFdBLFdBQVUsS0FBVjtFQUNBLGFBQVksT0FBWjs7QUFHRjtBQUNBO0VBQ0UsYUFBc0Isd0NBQXRCO0VBQ0EsYUFBWSxPQUFaOztBQUVGO0VBQ0UsV0FBVSxNQUFWOztBQUVGO0FBQ0E7RUFDRSxXQUFVLE1BQVY7RUFDQSxTQUFRLGNBQVI7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRSxPQUFNLEtBQU47RUFDQSxhQUErQiw2REFBL0I7RUFDQSxhQUFZLE9BQVo7RUFDQSxhQUFZLE9BQVo7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLE1BQStCLHNDQUEvQjs7QUFFRjtBQUNBO0VBQ0UsT0FBTSxRQUFOOztBQU9BOztFRXJCQSxPQUFPLEtBQVA7RUFLRSxpQkFBaUIsS0FBakI7O0FBSUY7O0VBQ0UsT0FBTyxLQUFQOztBQUVGOztFQUlJLGlCQUFpQixVQUFqQjs7QUZVRjtFQUNFLE9BQU0sZ0JBQU47O0FBT0o7RUFDRSxTQUFRLFFBQVI7O0FBUUE7RUFDRSxRQUFPLFNBQVA7RUFDQSxTQUFRLEVBQVI7RUFDQSxnQkFBZSxJQUFmOztBQUNGO0VBQ0UsZUFBYyxJQUFkOztBQUNGO0FBQ0E7RUFDRSxXQUFVLFFBQVY7O0FBQ0Y7RUFDRSxPQUFvQixRQUFwQjs7QUFDRjtBQUNBO0VBQ0UsT0FBb0IsUUFBcEI7O0FBQ0Y7RUFDRSxPQUFNLFFBQU47RUFDQSxhQUFZLEtBQVo7O0FBTU47RUdwR0ksUUFBUSxlQUFSO0VIc0dGLGNBQWEsSUFBYjtFQUNBLGVBQWMsSUFBZDs7QUFDQTtFQUNFLGNBQWEsS0FBYjs7QUFFSjtFQUNFLE9BQU0sS0FBTjtFQUNBLGtCQUFpQixRQUFqQjtFQUNBLFFBQU8sZ0JBQVA7RUFHQSxTQUFRLGFBQVI7RUkvRWdCLG9CQUFHLHlCQUFIO0VBUkgsWUFBRyx5QkFBSDtFSnlGYixXQUFVLE9BQVY7O0FBRUE7RUt4R0UsU0FBUyxPQUFUO0VMMEdBLGVBQWMsV0FBZDs7QUFFRjtFQUNFLGFBQVksU0FBWjs7QUFFRjtBQUNBO0FBQ0E7RUFDRSxRQUFPLElBQVA7RUcvSEEsUUFBUSxLQUFSO0VIaUlBLFNBQVEsSUFBUjtFSS9GYyxvQkFBRyxLQUFIO0VBUkgsWUFBRyxLQUFIO0VKeUdYLGtCQUFpQix1QkFBakI7O0FBS0o7RUFDRSxPQUFNLEtBQU47O0FBRUE7RUFDRSxPQUFNLEtBQU47O0FBR0E7RUFDRSxPQUFNLFFBQU47O0FBR0Y7QUFDQTtBQUNBO0VBQ0UsT0FBTSxLQUFOOztBQUVKO0FBQ0E7RUFDRSxPQUFNLFFBQU47O0FBRUE7O0VBQ0UsT0FBTSxLQUFOOztBQUVKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLE9BQU0sUUFBTjtFQUNBLGFBQVksT0FBWjs7QUFFRjtBQUNBO0VBQ0UsT0FBTSxRQUFOOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0VBQ0UsT0FBTSxRQUFOOztBQUdGO0VBQ0UsT0FBTSxLQUFOO0VBQ0EsYUFBWSxRQUFaOztBQUVGO0VBQ0UsT0FBTSxLQUFOOztBQUVGO0FBQ0E7QUFDQTtFQUNFLE9BQU0sS0FBTjs7QUFFRjtFQUNFLE9BQU0sUUFBTjtFQUNBLGFBQVksUUFBWjs7QUFFRjtFQUNFLE9BQU0sUUFBTiIsImZpbGUiOiJucG0vbnBtanMuY29tLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBpbXBvcnQgXCJuaWJcIlxuLy8gQGltcG9ydCBfbWl4aW5zXG5cbi8vIEBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU5vdG9cXCtTYW5zOjQwMCw3MDBpdGFsaWMsNDAwaXRhbGljLDcwMFwiKVxuXG4vLyBzdHlsdXMgLXcgLXUgbmliIC0tc291cmNlbWFwLWlubGluZSBucG1qcy5jb20uc3R5bFxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiR0ZXh0LWNvbG91ciA9ICMxMjEzMTRcbiRjb2RlLWNvbG91ciA9ICNmZjhcbiRsaW5rLWNvbG91ciA9ICMzN2ZcbiRsaW5rLXZpc2l0ZWQtY29sb3VyID0gI2MzOVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuYm9keVxuICBzdGFuZGFyZC10eXBlLXNldHRpbmdzKClcblxuICBmb250LXNpemUgMTZweFxuICBsaW5lLWhlaWdodCAxLjQ0ZW1cblxuLy8gQmFzaWMgZm9udHMgZm9yIHRleHQsIGhlYWRpbmdzIGFuZCBtb25vXG5ib2R5XG4uZmVhdGhlcndlaWdodC1oZWFkaW5nXG4gIGZvbnQtZmFtaWx5ICdTZWdvZSBVSScsICdMdWNpZGEgR3JhbmRlJywgc2Fucy1zZXJpZlxuICBmb250LXdlaWdodCBub3JtYWxcblxuaDFcbiAgZm9udC1zaXplIDIuN2VtXG5cbmgyXG4ucGFja2FnZS1kZXNjcmlwdGlvblxuICBmb250LXNpemUgMS43ZW1cbiAgcGFkZGluZyAwLjdlbSAwIDAuM2VtXG5cbmgxXG5oMlxuaDNcbmg0XG5oNVxuaDZcbi5wYWNrYWdlLWRlc2NyaXB0aW9uXG4gIGNvbG9yIGJsYWNrXG4gIGZvbnQtZmFtaWx5ICdTZWdvZSBVSSBTZW1pYm9sZCcsICdTZWdvZSBVSScsICdMdWNpZGEgR3JhbmRlJywgc2Fucy1zZXJpZlxuICBmb250LXdlaWdodCBub3JtYWxcbiAgbGluZS1oZWlnaHQgMS40NGVtXG5cbnByZVxuY29kZVxua2JkXG5zYW1wXG50dFxuICBmb250IG5vcm1hbCAxZW0vMS40NGVtIENvbnNvbGFzLCBtb25vc3BhY2VcblxuYm9keVxuLmJveFxuICBjb2xvciAkdGV4dC1jb2xvdXJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ29sb3VyIHZpc2l0ZWQvdW52aXNpdGVkIGxpbmtzXG5cbi5jb250ZW50XG4jcG9zdHNcbiAgYVxuICAgIGxpbmstY29sb3VyKCRsaW5rLWNvbG91ciwgJGxpbmstdmlzaXRlZC1jb2xvdXIpXG5cbi5jb250ZW50XG4gIGgxXG4gICAgYVxuICAgICAgY29sb3IgJGxpbmstY29sb3VyICFpbXBvcnRhbnRcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBNaXNjLlxuXG4ubWFya2Rvd25cbiAgbGlcbiAgICBwYWRkaW5nIDAuMWVtIDBcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBTZWFyY2ggcmVzdWx0c1xuXG4uc2VhcmNoLXJlc3VsdHNcbiAgLnBhY2thZ2UtZGV0YWlsc1xuICAgIGgzXG4gICAgICBtYXJnaW4gMjBweCAwIDBcbiAgICAgIHBhZGRpbmcgMFxuICAgICAgcGFkZGluZy1ib3R0b20gNXB4XG4gICAgcFxuICAgICAgbWFyZ2luLWJvdHRvbSA1cHhcbiAgICAuZGVzY3JpcHRpb25cbiAgICAuc3RhdHNcbiAgICAgIGZvbnQtc2l6ZSBpbmhlcml0XG4gICAgLmRlc2NyaXB0aW9uXG4gICAgICBjb2xvciBoc2woMCwgMCUsIDI1JSlcbiAgICAuc3RhdHNcbiAgICAua2V5d29yZHNcbiAgICAgIGNvbG9yIGhzbCgwLCAwJSwgNTAlKVxuICAgIC52ZXJzaW9uXG4gICAgICBjb2xvciAjYmQzM2E0XG4gICAgICBmb250LXdlaWdodCBib2xkXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU3R5bGVzIGZvciBjb2RlIGJsb2NrcyBhbmQgaW5saW5lIGNvZGVcblxuY29kZVxuICBib3JkZXIgc29saWQgMXB4ICNkZGRcbiAgcGFkZGluZy1sZWZ0IDNweFxuICBwYWRkaW5nLXJpZ2h0IDNweFxuICAmOmhvdmVyXG4gICAgYm9yZGVyLWNvbG9yICNhYWFcblxucHJlXG4gIGNvbG9yICRjb2RlLWNvbG91clxuICBiYWNrZ3JvdW5kLWNvbG9yICR0ZXh0LWNvbG91clxuICBtYXJnaW4gMC44ZW0gMWVtIDEuMmVtXG4gIC8vIHBhZGRpbmcgMC4zZW0gMC45ZW1cbiAgLy8gYm94LXNoYWRvdyAzcHggNnB4IDlweCAjODg4XG4gIHBhZGRpbmcgMC4yNWVtIDAuNWVtXG4gIGJveC1zaGFkb3cgMC4zZW0gMC40ZW0gMC4yZW0gMCAjYmJiXG4gIGZvbnQtc2l6ZSAwLjlyZW1cblxuICBjb2RlXG4gICAgZGlzcGxheSBpbmxpbmVcbiAgICBvdmVyZmxvdy13cmFwIGJyZWFrLXdvcmRcblxuICBwcmVcbiAgICB3aGl0ZS1zcGFjZSBwcmUtd3JhcFxuXG4gIGNvZGVcbiAgcHJlXG4gIHByZTpob3ZlclxuICAgIG1hcmdpbiAwcHhcbiAgICBib3JkZXIgbm9uZVxuICAgIHBhZGRpbmcgMHB4XG4gICAgYm94LXNoYWRvdyBub25lXG4gICAgYmFja2dyb3VuZC1jb2xvciB0cmFuc3BhcmVudCAhaW1wb3J0YW50XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFN5bnRheCBoaWdobGlnaHRpbmdcblxuLmhpZ2hsaWdodFxuICBjb2xvciAjZWVlXG5cbiAgLmNvbW1lbnRcbiAgICBjb2xvciAjMDBkZDk5XG5cbiAgLnZhcmlhYmxlXG4gICAgJi5mdW5jdGlvblxuICAgICAgY29sb3IgI2U4MDAwZFxuXG4gIC5zdXBwb3J0XG4gICAgJi5jb25zdGFudFxuICAgICYuZnVuY3Rpb25cbiAgICAmLnR5cGVcbiAgICAgIGNvbG9yICNkZGRcblxuICAua2V5d29yZFxuICAuc3RvcmFnZVxuICAgIGNvbG9yICNmZGZkOTZcblxuICAgICYudHlwZSArIHNwYW5cbiAgICAgIGNvbG9yICNkZGRcblxuICAua2V5d29yZC5vcGVyYXRvclxuICAubWV0YS5icmFjZVxuICAubWV0YS5kZWxpbWl0ZXIubWV0aG9kLnBlcmlvZFxuICAubWV0YS5kZWxpbWl0ZXIub2JqZWN0LmNvbW1hXG4gIC5wdW5jdHVhdGlvbi50ZXJtaW5hdG9yLnN0YXRlbWVudFxuICAucHVuY3R1YXRpb24uc2VjdGlvbi5zY29wZVxuICAgIGNvbG9yICNmZjkxYTRcbiAgICBmb250LXdlaWdodCBub3JtYWxcblxuICAuc3RvcmFnZS5tb2RpZmllciArIHNwYW5cbiAgLmVudGl0eS5uYW1lLmZ1bmN0aW9uXG4gICAgY29sb3IgI2Y3N2ZiZVxuXG4gIC5zdHJpbmcucXVvdGVkXG4gIC5udW1lcmljXG4gIC5tZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5Lmpzb24gPiAuc3RyaW5nLnF1b3RlZC5kb3VibGUuanNvblxuICAubWV0YS5zdHJ1Y3R1cmUuZGljdGlvbmFyeS5qc29uID4gLnN0cmluZy5xdW90ZWQuZG91YmxlLmpzb24gLnB1bmN0dWF0aW9uLnN0cmluZ1xuICAgIGNvbG9yICMxZTkwZmZcblxuICAvLyBFLmcuICR7IGFuZCB9IGluIEVTNiB0ZW1wbGF0ZSBzdHJpbmdzXG4gIC5zdHJpbmcgLnB1bmN0dWF0aW9uLnNlY3Rpb24uZW1iZWRkZWRcbiAgICBjb2xvciAjNGRkXG4gICAgZm9udC13ZWlnaHQgaW5oZXJpdFxuXG4gIC5wdW5jdHVhdGlvbi5kZWZpbml0aW9uXG4gICAgY29sb3IgI2VlZVxuXG4gIC5tZXRhLnRhZ1xuICAuZW50aXR5Lm5hbWUudGFnXG4gIC5wdW5jdHVhdGlvbi5kZWZpbml0aW9uLnRhZ1xuICAgIGNvbG9yICM3YWZcblxuICAuZW50aXR5Lm90aGVyLmF0dHJpYnV0ZS1uYW1lXG4gICAgY29sb3IgI2ZkZmQ5NlxuICAgIGZvbnQtd2VpZ2h0IGluaGVyaXRcblxuICAuc3RyaW5nLnVucXVvdGVkLmh0bWxcbiAgICBjb2xvciAjZjc3ZmJlXG5cbiIsIlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5zdGFuZGFyZC10eXBlLXNldHRpbmdzKClcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZVxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5XG5cbiAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbFxuICB3b3JkLXNwYWNpbmc6IG5vcm1hbFxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxudXNlLXdlYi1mb250KCRuYW1lLCAkdmFyaWFudHMgPSAnNDAwLDQwMGksNzAwLDcwMGknKVxuICAkdXJsID0gZ2V0LXdlYi1mb250LXVybCgkbmFtZSwgJHZhcmlhbnRzKVxuXG4gIEBpbXBvcnQgdXJsKCR1cmwpXG5cbiAgaHRtbFxuICBib2R5XG4gICAgZm9udC1mYW1pbHkgJG5hbWUsIEFyaWFsLCBzYW5zLXNlcmlmXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5qdXN0aWZ5KClcbiAgdGV4dC1hbGlnbiBqdXN0aWZ5XG4gIHRleHQtanVzdGlmeSBkaXN0cmlidXRlXG5cbiAgJjphZnRlclxuICAgIGNvbnRlbnQgXCJcIlxuICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgd2lkdGggMTAwJVxuXG4gID4gKlxuICAgIHZlcnRpY2FsLWFsaWduIHRvcFxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuc3ludGF4KCRjb2xvdXIsICRzdHlsZXMuLi4pXG4gIGlmIGxlbmd0aCgkY29sb3VyKSA+IDFcbiAgICAkc3R5bGVzID0gc2xpY2UoJGNvbG91ciwgMSlcbiAgICAkY29sb3VyID0gJGNvbG91clswXVxuXG4gICRpbXBvcnRhbmNlID0gYXJndW1lbnRzW2xlbmd0aChhcmd1bWVudHMpIC0gMV0gPT0gIWltcG9ydGFudCA/ICFpbXBvcnRhbnQgOiB1bnF1b3RlKCcnKVxuXG4gIGNvbG9yOiAkY29sb3VyICRpbXBvcnRhbmNlXG5cbiAgZm9udC13ZWlnaHQ6IGJvbGQgJGltcG9ydGFuY2UgaWYgYm9sZCBpbiAkc3R5bGVzXG4gIGZvbnQtc3R5bGU6IGl0YWxpYyAkaW1wb3J0YW5jZSBpZiBpdGFsaWMgaW4gJHN0eWxlc1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSAkaW1wb3J0YW5jZSBpZiB1bmRlcmxpbmUgaW4gJHN0eWxlc1xuIiwiXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRfc2NhbGVzID0ge1xuICBwYWRkaW5nOiAgICAwLjVlbSxcbiAgbWFyZ2luOiAgICAgMWVtLFxuICBzaGFkb3c6ICAgICB7XG4gICAgc2l6ZTogICAgICAgMC41ZW0sXG4gICAgb3BhY2l0eTogICAgMC43NVxuICB9XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLypcbmJvZHlcbiAgcGFkIDJlbVxuZGl2XG4gIHBhZCAxZW0sIHBhZGRpbmcgbWFyZ2luXG4qL1xuXG5wYWQoJHR5cGVzID0gcGFkZGluZywgJHBhZCA9ICRfc2NhbGVzLnBhZGRpbmcsICRtZ24gPSAkX3NjYWxlcy5tYXJnaW4pXG4gIHBhZGRpbmcgKCRwYWQgLyAyKSAkcGFkIGlmIHBhZGRpbmcgaW4gJHR5cGVzXG4gIG1hcmdpbiAoJG1nbiAvIDIpICRtZ24gaWYgbWFyZ2luIGluICR0eXBlc1xuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuc2hhZG93KCRzaXplID0gJF9zY2FsZXMuc2hhZG93LnNpemUsICRvcGFjaXR5ID0gJF9zY2FsZXMuc2hhZG93LnNpemUpXG4gIGJveC1zaGFkb3cgKCRzaXplICogMC41KSAkc2l6ZSAoJHNpemUgKiAxLjUpIDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAkb3BhY2l0eSlcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qXG5hXG4gIGxpbmstY29sb3VyKCMwNWYsICNjNjApXG5iXG4gIGxpbmstY29sb3VyKCMwNWYsICR1bmRlcmxpbmU6IG5vbmUpXG5jXG4gIGxpbmstY29sb3VyKCMwNWYsICNjNjAsIGJvdGgpXG4qL1xuXG5saW5rLWNvbG91cigkY29sb3VyLCAkdmlzaXRlZCA9ICRjb2xvdXIsICR1bmRlcmxpbmUgPSBob3ZlcilcbiAgY29sb3I6ICRjb2xvdXJcblxuICAkb2ZmID0gb2ZmIG5vbmUgaG92ZXJcblxuICBpZiAkdW5kZXJsaW5lIGluICRvZmZcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmVcbiAgZWxzZVxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lXG5cbiAgJjp2aXNpdGVkXG4gICAgY29sb3I6ICR2aXNpdGVkXG5cbiAgJjpob3ZlclxuICAgICRvbiA9IG9uIGJvdGggaG92ZXJcblxuICAgIGlmICR1bmRlcmxpbmUgaW4gJG9uXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZVxuICAgIGVsc2VcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubGluay11bmRlcmxpbmUoJHVuZGVybGluZS1jb2xvdXIgPSBjdXJyZW50Q29sb3IsICR2aXNpdGVkLWNvbG91ciA9ICNjNjApXG4gIC8vIGNvbG9yOiAkdW5kZXJsaW5lLWNvbG91clxuXG4gICZcbiAgJjpsaW5rXG4gICAgY29sb3I6IGluaGVyaXRcblxuICBwYWRkaW5nLWJvdHRvbTogMXB4XG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkXG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDJweFxuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKCR1bmRlcmxpbmUtY29sb3VyLCAwLjUpXG5cbiAgJjp2aXNpdGVkXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgkdmlzaXRlZC1jb2xvdXIsIDAuNSlcblxuICAmXG4gICY6aG92ZXJcbiAgJjpsaW5rXG4gICY6dmlzaXRlZFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG4gICY6aG92ZXJcbiAgICBjb2xvcjogJHVuZGVybGluZS1jb2xvdXJcbiAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZS1pbiAwLjI1c1xuXG4gICAgJjp2aXNpdGVkXG4gICAgICBjb2xvcjogJHZpc2l0ZWQtY29sb3VyXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5wbGFjZWhvbGRlcigpXG4gICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJcbiAgICB7YmxvY2t9XG5cbiAgJjotbW96LXBsYWNlaG9sZGVyXG4gICAge2Jsb2NrfVxuXG4gICY6Oi1tb3otcGxhY2Vob2xkZXJcbiAgICB7YmxvY2t9XG5cbiAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXJcbiAgICB7YmxvY2t9XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5zZWxlY3Rpb24oJGNvbG9yLCAkYmFja2dyb3VuZClcbiAgJjo6c2VsZWN0aW9uXG4gICAgY29sb3I6ICRjb2xvclxuICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5iYXNlLWNvcmUoJHRleHQtZm9udC1mYW1pbHksICRmb250LXNpemUgPSAxNHB0KVxuICBAaW1wb3J0IHVybChnZXQtd2ViLWZvbnQtdXJsKCR0ZXh0LWZvbnQtZmFtaWx5KSlcblxuICBodG1sXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplXG5cbiAgYm9keVxuICAgIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250LWZhbWlseVxuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHRcbiAgICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwibGlnYVwiLCBcImRsaWdcIlxuXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlXG4gICAgZm9udC1zaXplLWFkanVzdDogJGZvbnQtc2l6ZVxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHRcblxuICAgIHdvcmQtc3BhY2luZzogbm9ybWFsXG4gICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbFxuXG4gICAgY29sb3I6ICR0ZXh0LWNvbG91clxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG91clxuXG4gICAgLy8gLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5XG5cbiAgICBpbWFnZS1yZW5kZXJpbmc6IC13ZWJraXQtb3B0aW1pemUtY29udHJhc3RcbiAgICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBuZWFyZXN0LW5laWdoYm9yXG4gICAgaW1hZ2UtcmVuZGVyaW5nOiBjcmlzcC1lZGdlc1xuXG4gICAgY3Vyc29yOiBhdXRvICFpbXBvcnRhbnRcblxuICBwcmVcbiAgY29kZVxuICB0dFxuICBrYmRcbiAgc2FtcFxuICAgIGZvbnQ6IG5vcm1hbCBpbmhlcml0ICRtb25vc3BhY2UtZm9udFxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHRcblxuICBwcmVcbiAgICB3aGl0ZS1zcGFjZSBwcmUtd3JhcFxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuYmFzZS1saW5rcygpXG4gIGFcbiAgICBsaW5rLWNvbG91cigkbGluay1jb2xvdXIsICRsaW5rLXZpc2l0ZWQtY29sb3VyKVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuYmFzZS1wcmUoKVxuICBwcmVcbiAgdGV4dGFyZWFcbiAgICBtYXJnaW46IDFlbSAwIDFlbSAyZW1cbiAgICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW1cbiAgICBsaW5lLWhlaWdodDogMS40NGVtXG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubm9ybWFsaXNlKClcbiAgQGluY2x1ZGUgLi9ub3JtYWxpc2VcbiIsIi8qXG4gKiBib3JkZXI6IDxjb2xvcj5cbiAqIGJvcmRlcjogLi4uXG4gKi9cblxuYm9yZGVyKGNvbG9yLCBhcmdzLi4uKVxuICBpZiBjb2xvciBpcyBhICdjb2xvcidcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvciBhcmdzXG4gIGVsc2VcbiAgICBib3JkZXI6IGFyZ3VtZW50c1xuIiwidXNlKCcuLi9ub2Rlcy92ZW5kb3ItaGVscGVycy5qcycpXG5AaW1wb3J0ICdjb25maWcnXG5cbi8qXG4gKiBBbGlhcyBcIm5vd3JhcFwiIGFzIFwibm8td3JhcFwiLlxuICovXG5cbm5vLXdyYXAgPSB1bnF1b3RlKCdub3dyYXAnKVxuXG4vKlxuICogSGVscGVyIHRvIGZpbmQgb3V0IGlmIGEgZ2l2ZW4gdmFsdWUgaXMgYSB3aWR0aFxuICovXG5cbmlzLXdpZHRoKHZhbClcbiAgaWYgYXV0byA9PSB2YWxcbiAgICByZXR1cm4gdHJ1ZVxuICBlbHNlIGlmIHZhbCAmJiAndW5pdCcgPT0gdHlwZSh2YWwpXG4gICAgLy8gU3R5bHVzIGRvZXMgbm90IHNob3J0IGNpcmN1aXQgc28gd2UgbmVlZCB0byBwZXJmb3JtIHRoaXMgYXMgYSBkaXN0aW5jdFxuICAgIC8vIG9wZXJhdGlvbiB0byBwcmV2ZW50IGVycm9yc1xuICAgIHJldHVybiAnJyAhPSB1bml0KHZhbClcbiAgcmV0dXJuIGZhbHNlXG5cbi8qXG4gKiBWZW5kb3Igc3VwcG9ydCBmb3IgdGhlIGdpdmVuIHByb3AgLyBhcmd1bWVudHMsIG9wdGlvbmFsbHkgc3BlY2lmeWluZyB0aGVcbiAqIG9ubHkgcHJlZml4ZXMgdG8gdXRpbGl6ZSwgb3IgdGhvc2Ugd2hpY2ggc2hvdWxkIGJlIGlnbm9yZWQuXG4gKi9cblxudmVuZG9yKHByb3AsIGFyZ3MsIG9ubHkgPSBudWxsLCBpZ25vcmUgPSBudWxsLCB2ZW5kb3ItcHJvcGVydHkgPSB0cnVlKVxuICBuZWVkX25vcm1hbGl6ZSA9ICF2ZW5kb3ItcHJvcGVydHkgb3IgcHJvcCBpbiAoJ3RyYW5zaXRpb24nICd0cmFuc2l0aW9uLXByb3BlcnR5JyAnYm9yZGVyLWltYWdlJyAnYm9yZGVyLWltYWdlLXNsaWNlJylcbiAgZm9yIHByZWZpeCBpbiB2ZW5kb3ItcHJlZml4ZXNcbiAgICB1bmxlc3MgKG9ubHkgYW5kICEocHJlZml4IGluIG9ubHkpKSBvciAoaWdub3JlIGFuZCBwcmVmaXggaW4gaWdub3JlKVxuICAgICAgaWYgb2ZmaWNpYWwgPT0gcHJlZml4XG4gICAgICAgIGlmIG5lZWRfbm9ybWFsaXplXG4gICAgICAgICAge3Byb3B9OiBub3JtYWxpemUocHJvcCwoJyVzJyAlIGFyZ3MpKVxuICAgICAgICBlbHNlXG4gICAgICAgICAge3Byb3B9OiBhcmdzXG4gICAgICBlbHNlXG4gICAgICAgIG5ld3Byb3AgPSBwcm9wXG4gICAgICAgIG5ld3Byb3AgPSAnLScgKyBwcmVmaXggKyAnLScgKyBwcm9wIGlmIHZlbmRvci1wcm9wZXJ0eVxuXG4gICAgICAgIGlmIG5lZWRfbm9ybWFsaXplXG4gICAgICAgICAge25ld3Byb3B9OiBub3JtYWxpemUocHJvcCwoJyVzJyAlIGFyZ3MpLHByZWZpeClcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHtuZXdwcm9wfTogYXJnc1xuLypcbiAqIFZlbmRvcml6ZSB0aGUgZ2l2ZW4gdmFsdWUuXG4gKi9cblxudmVuZG9yLXZhbHVlKGFyZywgb25seSA9IG51bGwsIGlnbm9yZSA9IG51bGwpXG4gIHByb3AgPSBjdXJyZW50LXByb3BlcnR5WzBdXG4gIGZvciBwcmVmaXggaW4gdmVuZG9yLXByZWZpeGVzXG4gICAgdW5sZXNzIChvbmx5IGFuZCAhKHByZWZpeCBpbiBvbmx5KSkgb3IgKGlnbm9yZSBhbmQgcHJlZml4IGluIGlnbm9yZSkgb3Igb2ZmaWNpYWwgPT0gcHJlZml4XG4gICAgICBhZGQtcHJvcGVydHkocHJvcCwgJy0lcy0lcycgJSAocHJlZml4IGFyZykpXG4gIGFyZ1xuXG4vKlxuICogVmVuZG9yIFwiYm94LXNoYWRvd1wiIHN1cHBvcnQuXG4gKi9cblxuYm94LXNoYWRvdygpXG4gIHZlbmRvcignYm94LXNoYWRvdycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidXNlci1zZWxlY3RcIiBzdXBwb3J0LlxuICovXG5cbnVzZXItc2VsZWN0KClcbiAgdmVuZG9yKCd1c2VyLXNlbGVjdCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1jb3VudFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLWNvdW50KClcbiAgdmVuZG9yKCdjb2x1bW4tY291bnQnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tZ2FwXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tZ2FwKClcbiAgdmVuZG9yKCdjb2x1bW4tZ2FwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGVcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1ydWxlLWNvbG9yXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tcnVsZS1jb2xvcigpXG4gIHZlbmRvcignY29sdW1uLXJ1bGUtY29sb3InLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZS13aWR0aFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUtd2lkdGgoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlLXdpZHRoJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGUtc3R5bGVcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlLXN0eWxlKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZS1zdHlsZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi13aWR0aFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXdpZHRoKClcbiAgdmVuZG9yKCdjb2x1bW4td2lkdGgnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tc3BhblwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXNwYW4oKVxuICB2ZW5kb3IoJ2NvbHVtbi1zcGFuJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tZmlsbFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLWZpbGwoKVxuICB2ZW5kb3IoJ2NvbHVtbi1maWxsJywgYXJndW1lbnRzLCBvbmx5OiBtb3opXG5cbi8qXG4gKiBMZWdhY3kgc3ludGF4IHN1cHBvcnQgZm9yIGJhY2tncm91bmQtY2xpcCBhbmQgYmFja2dyb3VuZC1vcmlnaW5cbiAqL1xuXG5sZWdhY3ktYmctdmFsdWVzKHByb3BlcnR5LCBhcmdzKVxuICBsZWdhY3lfYXJncyA9ICgpXG4gIGltcG9ydGFuY2UgPSB1bnF1b3RlKCcnKVxuICBmb3Igc3ViYXJncyBpbiBhcmdzXG4gICAgZm9yIGFyZyBpbiBzdWJhcmdzXG4gICAgICBpZiBhcmcgaW4gKGJvcmRlci1ib3ggcGFkZGluZy1ib3ggY29udGVudC1ib3gpXG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ2JvcmRlcicpICBpZiBhcmcgPT0gYm9yZGVyLWJveFxuICAgICAgICBhcmcgPSB1bnF1b3RlKCdwYWRkaW5nJykgaWYgYXJnID09IHBhZGRpbmctYm94XG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ2NvbnRlbnQnKSBpZiBhcmcgPT0gY29udGVudC1ib3hcbiAgICAgIGlmIGFyZyAhPSAnIWltcG9ydGFudCdcbiAgICAgICAgcHVzaChsZWdhY3lfYXJncyxhcmcpXG4gICAgICBlbHNlXG4gICAgICAgIGltcG9ydGFuY2UgPSAhaW1wb3J0YW50XG4gIHZlbmRvcihwcm9wZXJ0eSwgdW5xdW90ZShqb2luKCcsICcsbGVnYWN5X2FyZ3MpKSBpbXBvcnRhbmNlLCBvbmx5OiBtb3ogd2Via2l0KVxuXG4vKlxuICogVmVuZG9yIFwiYmFja2dyb3VuZC1jbGlwXCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZ3JvdW5kLWNsaXAoKVxuICBpZiBhcmd1bWVudHNbMF0gPT0gdGV4dFxuICAgIHZlbmRvcignYmFja2dyb3VuZC1jbGlwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQpXG4gIGVsc2VcbiAgICBsZWdhY3ktYmctdmFsdWVzKCdiYWNrZ3JvdW5kLWNsaXAnLCBhcmd1bWVudHMpXG4gICAgYmFja2dyb3VuZC1jbGlwOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJhY2tncm91bmQtb3JpZ2luXCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZ3JvdW5kLW9yaWdpbigpXG4gIGxlZ2FjeS1iZy12YWx1ZXMoJ2JhY2tncm91bmQtb3JpZ2luJywgYXJndW1lbnRzKVxuICBiYWNrZ3JvdW5kLW9yaWdpbjogYXJndW1lbnRzXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZ3JvdW5kLXNpemVcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtc2l6ZSgpXG4gIHZlbmRvcignYmFja2dyb3VuZC1zaXplJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNmb3JtXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2Zvcm0oKVxuICB2ZW5kb3IoJ3RyYW5zZm9ybScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zZm9ybS1vcmlnaW5cIiBzdXBwb3J0LlxuICovXG50cmFuc2Zvcm0tb3JpZ2luKClcbiAgICB2ZW5kb3IoJ3RyYW5zZm9ybS1vcmlnaW4nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2Zvcm0tc3R5bGVcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zZm9ybS1zdHlsZSgpXG4gIHZlbmRvcigndHJhbnNmb3JtLXN0eWxlJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYm9yZGVyLWltYWdlXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3JkZXItaW1hZ2UoKVxuICB2ZW5kb3IoJ2JvcmRlci1pbWFnZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvblwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbigpXG4gIHZlbmRvcigndHJhbnNpdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tcHJvcGVydHlcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tcHJvcGVydHkoKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tcHJvcGVydHknLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2l0aW9uLWR1cmF0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uLWR1cmF0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tZGVsYXlcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tZGVsYXkoKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tZGVsYXknLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZmFjZS12aXNpYmlsaXR5XCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZmFjZS12aXNpYmlsaXR5KClcbiAgdmVuZG9yKCdiYWNrZmFjZS12aXNpYmlsaXR5JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwicGVyc3BlY3RpdmVcIiBzdXBwb3J0LlxuICovXG5cbnBlcnNwZWN0aXZlKClcbiAgaWYgbWl4aW5cbiAgICB2ZW5kb3IoJ3BlcnNwZWN0aXZlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuICBlbHNlXG4gICAgJ3BlcnNwZWN0aXZlKCVzKScgJSBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcInBlcnNwZWN0aXZlLW9yaWdpblwiIHN1cHBvcnQuXG4gKi9cblxucGVyc3BlY3RpdmUtb3JpZ2luKClcbiAgdmVuZG9yKCdwZXJzcGVjdGl2ZS1vcmlnaW4nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBPcGFjaXR5IHdpdGggY29uZGl0aW9uYWwgSUUgc3VwcG9ydC5cbiAqL1xuXG5vcGFjaXR5KG4sIGFyZ3MuLi4pXG4gIG9wYWNpdHk6IG4gYXJnc1xuICBpZiBzdXBwb3J0LWZvci1pZVxuICAgIGlmIG4gPT0gaW5oZXJpdCBvciBuID09IGluaXRpYWxcbiAgICAgIC1tcy1maWx0ZXI6IG4gYXJnc1xuICAgICAgZmlsdGVyOiBuIGFyZ3NcbiAgICBlbHNlXG4gICAgICB2YWwgPSByb3VuZChuICogMTAwKVxuICAgICAgaWYgdmFsID09IDEwMFxuICAgICAgICAtbXMtZmlsdGVyOiBub25lIGFyZ3NcbiAgICAgICAgZmlsdGVyOiBub25lIGFyZ3NcbiAgICAgIGVsc2VcbiAgICAgICAgLW1zLWZpbHRlcjogJ1wicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9JXMpXCInICUgdmFsIGFyZ3NcbiAgICAgICAgZmlsdGVyOiAnYWxwaGEob3BhY2l0eT0lcyknICUgdmFsIGFyZ3NcblxuLypcbiAqIFZlbmRvciBcInRleHQtc2l6ZS1hZGp1c3RcIlxuICovXG5cbnRleHQtc2l6ZS1hZGp1c3QoKVxuICB2ZW5kb3IoJ3RleHQtc2l6ZS1hZGp1c3QnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBBbGlhcyB0aGUgXCJ3aGl0ZS1zcGFjZVwiIHByb3BlcnR5LlxuICovXG5cbndoaXRlc3BhY2UoKVxuICB3aGl0ZS1zcGFjZTogYXJndW1lbnRzXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtc2l6aW5nXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtc2l6aW5nKClcbiAgdmVuZG9yKCdib3gtc2l6aW5nJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LW9yaWVudFwiIHN1cHBvcnQuXG4gKi9cblxuYm94LW9yaWVudCgpXG4gIHZlbmRvcignYm94LW9yaWVudCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1mbGV4LWdyb3VwXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtZmxleC1ncm91cCgpXG4gIHZlbmRvcignYm94LWZsZXgtZ3JvdXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtb3JkaW5hbC1ncm91cFwiIHN1cHBvcnQuXG4gKi9cblxuYm94LW9yZGluYWwtZ3JvdXAoKVxuICB2ZW5kb3IoJ2JveC1vcmRpbmFsLWdyb3VwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtYWxpZ25cIiBzdXBwb3J0LlxuICovXG5cbmJveC1hbGlnbigpXG4gIHZlbmRvcignYm94LWFsaWduJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LXBhY2tcIiBzdXBwb3J0LlxuICovXG5cbmJveC1wYWNrKClcbiAgdmVuZG9yKCdib3gtcGFjaycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1kaXJlY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbmJveC1kaXJlY3Rpb24oKVxuICB2ZW5kb3IoJ2JveC1kaXJlY3Rpb24nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uJywgYXJndW1lbnRzKVxuXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tbmFtZVwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLW5hbWUoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1uYW1lJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWR1cmF0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZHVyYXRpb24oKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1kdXJhdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1kZWxheVwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLWRlbGF5KClcbiAgdmVuZG9yKCdhbmltYXRpb24tZGVsYXknLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZGlyZWN0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZGlyZWN0aW9uKClcbiAgdmVuZG9yKCdhbmltYXRpb24tZGlyZWN0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudFwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCgpXG4gIHZlbmRvcignYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCcsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24oKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tcGxheS1zdGF0ZVwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLXBsYXktc3RhdGUoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1wbGF5LXN0YXRlJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWZpbGwtbW9kZVwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLWZpbGwtbW9kZSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLWZpbGwtbW9kZScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImh5cGhlbnNcIiBzdXBwb3J0LlxuICovXG5cbmh5cGhlbnMoKVxuICB2ZW5kb3IoJ2h5cGhlbnMnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJhcHBlYXJhbmNlXCIgc3VwcG9ydC5cbiAqL1xuXG5hcHBlYXJhbmNlKClcbiAgdmVuZG9yKCdhcHBlYXJhbmNlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidGFiLXNpemVcIiBzdXBwb3J0LlxuICovXG5cbnRhYi1zaXplKClcbiAgdmVuZG9yKCd0YWItc2l6ZScsIGFyZ3VtZW50cywgb25seTogbW96IG8gb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJvdmVyZmxvdy1zY3JvbGxpbmdcIiBzdXBwb3J0LlxuICovXG5cbm92ZXJmbG93LXNjcm9sbGluZygpXG4gIHZlbmRvcignb3ZlcmZsb3ctc2Nyb2xsaW5nJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0ZXh0LW92ZXJmbG93XCIgc3VwcG9ydCwgLCAtby0gZm9yIG9wZXJhIDkuKiAtIDEwLipcbiAqL1xuXG50ZXh0LW92ZXJmbG93KClcbiAgdmVuZG9yKCd0ZXh0LW92ZXJmbG93JywgYXJndW1lbnRzLCBvbmx5OiBvZmZpY2lhbCBvKVxuXG4vKlxuICogVmVuZG9yIFwidGV4dC1zaXplLWFkanVzdFwiIHN1cHBvcnQuXG4gKi9cbnRleHQtc2l6ZS1hZGp1c3QoKVxuICB2ZW5kb3IoJ3RleHQtc2l6ZS1hZGp1c3QnLCBhcmd1bWVudHMsIG9ubHk6IG9mZmljaWFsIHdlYmtpdCBtcylcblxuLypcbiAqIFZlbmRvciBcImZvbnQtc21vb3RoaW5nXCIgc3VwcG9ydCwgd2Via2l0IG9ubHkuXG4gKi9cbmZvbnQtc21vb3RoaW5nKClcbiAgdmVuZG9yKCdmb250LXNtb290aGluZycsIGFyZ3VtZW50cywgb25seTogd2Via2l0KVxuXG5cbi8qKlxuICogVmVuZG9yIGlucHV0LXBsYWNlaG9sZGVyL3BsYWNlaG9sZGVyIHN1cHBvcnQuXG4gKlxuICogRXhhbXBsZXM6XG4gKiAgICAvLyBEZWZhdWx0IHN5bnRheFxuICogICAgYm9keVxuICogICAgICBwbGFjZWhvbGRlcihjb2xvciAjMzMzLCBmb250LXdlaWdodCBub3JtYWwpXG4gKlxuICogICAgLy8gVGhlIGNvbW1hIGlzIGltcG9ydGFudFxuICogICAgLnBsYWNlaG9sZGVyLXJlZFxuICogICAgICBwbGFjZWhvbGRlcihjb2xvciByZWQsKVxuICpcbiAqICAgIC8vIFdlIGNhbiBwYXNzIGEgZnVuY3Rpb25cbiAqICAgIGdyZWVuLXBsYWNlaG9sZGVyKClcbiAqICAgICAgY29sb3IgZ3JlZW5cbiAqICAgIC5wbGFjZWhvbGRlci1ncmVlblxuICogICAgICBwbGFjZWhvbGRlcihncmVlbi1wbGFjZWhvbGRlcilcbiAqXG4gKiAgICAvLyBXZSBjYW4gcGFzcyBhIGhhc2hcbiAqICAgIHRleHRhcmVhXG4gKiAgICAgIHBsYWNlaG9sZGVyKChmb250LXN0eWxlIGl0YWxpYykgKGZvbnQtd2VpZ2h0IGJvbGQpIChwYWRkaW5nICc0cHggMTBweCcpKVxuICovXG5wbGFjZWhvbGRlcigpXG4gIGZvciB2IGluICc6LXdlYmtpdC1pbnB1dCcgJy1tb3onICc6LW1veicgJy1tcy1pbnB1dCdcbiAgICAmOnt2fS1wbGFjZWhvbGRlclxuICAgICAgZm9yIHBhaXIgaW4gYXJndW1lbnRzXG4gICAgICAgIGlmIHR5cGVvZihwYWlyKSA9PSAnZnVuY3Rpb24nXG4gICAgICAgICAgcGFpcigpXG4gICAgICAgIGVsc2UgaWYgcGFpciBpcyBub3QgbnVsbCAmJiBwYWlyWzBdIGlzIG5vdCBudWxsXG4gICAgICAgICAge3BhaXJbMF19OiB0eXBlKHBhaXJbMV0pID09ICdzdHJpbmcnID8gcyhwYWlyWzFdKSA6IHBhaXJbMV1cbmlucHV0LXBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXJcblxuLypcbiAqIFZlbmRvciBiYWNrZ3JvdW5kIHN1cHBvcnQgKGdyYWRpZW50cykuXG4gKi9cblxuYmFja2dyb3VuZCgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgYmFja2dyb3VuZCBhcmd1bWVudHNcblxuYmFja2dyb3VuZC1pbWFnZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kLWltYWdlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgYmFja2dyb3VuZC1pbWFnZSBhcmd1bWVudHNcblxuY3Vyc29yKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2N1cnNvcicsIGFyZ3VtZW50cywgdmVuZG9yLXByb3BlcnR5OiBmYWxzZSlcbiAgZWxzZVxuICAgIGN1cnNvciBhcmd1bWVudHNcblxubGlzdC1zdHlsZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdsaXN0LXN0eWxlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgbGlzdC1zdHlsZSBhcmd1bWVudHNcblxubGlzdC1zdHlsZS1pbWFnZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdsaXN0LXN0eWxlLWltYWdlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgbGlzdC1zdHlsZS1pbWFnZSBhcmd1bWVudHNcbiIsIi8qXG4gKiBWZW5kb3IgXCJkaXNwbGF5OiBmbGV4XCIgc3VwcG9ydCB3aXRoIGZhbGxiYWNrIHRvIG9ic29sZXRlIHZlcnNpb25zLlxuICovXG5cbmZsZXgtdmVyc2lvbiA/PSBib3ggZmxleFxuXG4vL1xuLy8gMS4gRGlzcGxheSB2YWx1ZXNcbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNmbGV4LWNvbnRhaW5lcnNcbi8vXG5kaXNwbGF5KHR5cGUsIGFyZ3MuLi4pXG4gIGlmIGZsZXggPT0gdHlwZSB8fCBpbmxpbmUtZmxleCA9PSB0eXBlXG4gICAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgICAgaWYgZmxleCA9PSB0eXBlXG4gICAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94IGFyZ3NcbiAgICAgICAgZGlzcGxheTogdmVuZG9yLXZhbHVlKGJveCBhcmdzLCBvbmx5OiBtb3ogd2Via2l0KVxuICAgICAgZWxzZVxuICAgICAgICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3ggYXJnc1xuICAgICAgICBkaXNwbGF5OiB2ZW5kb3ItdmFsdWUoaW5saW5lLWJveCBhcmdzLCBvbmx5OiBtb3ogd2Via2l0KVxuICAgIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgICBkaXNwbGF5OiB2ZW5kb3ItdmFsdWUoYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpIC8vIG92ZXJ3cml0ZXMgb2xkIHdlYmtpdFxuICBlbHNlXG4gICAgZGlzcGxheTogYXJndW1lbnRzXG5cbi8qXG4gKiBOZXcgc3ludGF4IGZvciBicm93c2VycyBsaWtlIEdvb2dsZSBDaHJvbWUuXG4gKiBQbHVzIGEgdHJhbnNsYXRpb24gdG8gdGhlIG9sZCBzeW50YXgsIGlmIHBvc3NpYmxlLlxuICovXG5cblxuLy9cbi8vIDUuIE9yZGVyaW5nIGFuZCBPcmllbnRhdGlvblxuLy8gICAgLSBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI29yZGVyaW5nLWFuZC1vcmllbnRhdGlvblxuLy9cbi1mbGV4LW9ic29sZXRlLWRpcmVjdGlvbihkaXJlY3Rpb24pXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICBpZiByb3ctcmV2ZXJzZSA9PSBkaXJlY3Rpb24gfHwgY29sdW1uLXJldmVyc2UgPT0gZGlyZWN0aW9uXG4gICAgICB2ZW5kb3IoJ2JveC1kaXJlY3Rpb24nLCByZXZlcnNlLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gICAgaWYgcm93ID09IGRpcmVjdGlvbiB8fCByb3ctcmV2ZXJzZSA9PSBkaXJlY3Rpb25cbiAgICAgIHZlbmRvcignYm94LW9yaWVudCcsIGhvcml6b250YWwsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG4gICAgZWxzZSBpZiBjb2x1bW4gPT0gZGlyZWN0aW9uIHx8IGNvbHVtbi1yZXZlcnNlID09IGRpcmVjdGlvblxuICAgICAgdmVuZG9yKCdib3gtb3JpZW50JywgdmVydGljYWwsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbi1mbGV4LW9ic29sZXRlLXdyYXAodmFsdWUpXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICAvLyBXQVJOOiB3cmFwLXJldmVyc2UgZG9lcyBub3QgaGF2ZSBhIGJveCBlcXVpdmFsZW50LiBUaGlzIHdpbGwgcmVuZGVyIGluIGRpZmZlcmVudCBtYW5uZXJzXG4gICAgLy8gICAgb24gYm94IHZzLiBmbGV4IHZhbHVlcy5cbiAgICBpZiAnd3JhcCcgPT0gdmFsdWUgfHwgd3JhcC1yZXZlcnNlID09IHZhbHVlXG4gICAgICB2ZW5kb3IoJ2JveC1saW5lcycsIG11bHRpcGxlLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuICAgIGVsc2UgaWYgbm93cmFwID09IHZhbHVlXG4gICAgICB2ZW5kb3IoJ2JveC1saW5lcycsIHNpbmdsZSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuZmxleC1kaXJlY3Rpb24oZGlyZWN0aW9uKVxuICAvLyBvYnNvbGV0ZVxuICAtZmxleC1vYnNvbGV0ZS1kaXJlY3Rpb24oZGlyZWN0aW9uKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1kaXJlY3Rpb24nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuZmxleC13cmFwKHZhbHVlKVxuICAvLyBvYnNvbGV0ZVxuICAtZmxleC1vYnNvbGV0ZS13cmFwKHZhbHVlKVxuXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LXdyYXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuZmxleC1mbG93KClcbiAgLy8gb2Jzb2xldGVcbiAgLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGFyZ3VtZW50c1swXSlcbiAgLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGFyZ3VtZW50c1sxXSlcbiAgLWZsZXgtb2Jzb2xldGUtd3JhcChhcmd1bWVudHNbMF0pXG4gIC1mbGV4LW9ic29sZXRlLXdyYXAoYXJndW1lbnRzWzFdKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1mbG93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cblxub3JkZXIoKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtb3JkaW5hbC1ncm91cCcsIGFyZ3VtZW50cywgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtb3JkZXInLCBhcmd1bWVudHMsIG9ubHk6IG1zKVxuICAgIHZlbmRvcignb3JkZXInLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuXG4vL1xuLy8gNy4gRmxleGliaWxpdHlcbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNmbGV4aWJpbGl0eVxuLy9cbmZsZXgtZ3Jvdyhncm93dGgpXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2JveC1mbGV4JywgZ3Jvd3RoKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1ncm93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmZsZXgtYmFzaXMoKVxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1iYXNpcycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5mbGV4LXNocmluaygpXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LXNocmluaycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5mbGV4KGdyb3d0aClcblxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgc2hyaW5rID0gMVxuXG4gICAgaWYgbm9uZSA9PSBncm93dGggfHwgaW5pdGlhbCA9PSBncm93dGhcbiAgICAgIC8vIFdlbGwga25vd24gdmFsdWVzXG4gICAgICBzaHJpbmsgPSAwIGlmIG5vbmUgPT0gZ3Jvd3RoXG4gICAgICBncm93dGggPSAwXG4gICAgZWxzZSBpZiBpcy13aWR0aChncm93dGgpID09IHRydWVcbiAgICAgIC8vIEJhc2lzIGlzIGRlZmluZWQgYXMgdGhlIGZpcnN0IHBhcmFtZXRlclxuICAgICAgZ3Jvd3RoID0gYXJndW1lbnRzWzFdIHx8IDBcbiAgICAgIHNocmluayA9IGFyZ3VtZW50c1syXSBpZiAzIDw9IGxlbmd0aChhcmd1bWVudHMpXG4gICAgZWxzZSBpZiBhcmd1bWVudHNbMV0gJiYgaXMtd2lkdGgoYXJndW1lbnRzWzFdKSA9PSBmYWxzZVxuICAgICAgLy8gR3Jvd3RoIGlzIGZpcnN0IGFuZCBzaHJpbmsgaXMgc2Vjb25kXG4gICAgICBzaHJpbmsgPSBhcmd1bWVudHNbMV1cblxuICAgIC8vIFNpbmNlIHdlIGNhbid0IG1ha2UgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gZ3Jvd2luZyBhbmQgc2hyaW5raW5nIGluIHRoZSBib3ggbW9kZWwsIHRha2VcbiAgICAvLyB0aGUgb25lIHRoYXQgcHJvdmlkZXMgdGhlIG1vc3QgZmxleGliaWxpdHkuXG4gICAgdmVuZG9yKCdib3gtZmxleCcsIG1heChncm93dGgsIHNocmluayksIGlnbm9yZTogbXMpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cblxuLy8gY29udmVydHMgdGhlIGp1c3RpZmljYXRpb24gYWxpZ25tZW50XG4tY29udmVydC1qdXN0aWZ5KGFsaWduKVxuICBpZiBmbGV4LXN0YXJ0ID09IGFsaWduXG4gICAgcmV0dXJuIHN0YXJ0XG4gIGVsc2UgaWYgZmxleC1lbmQgPT0gYWxpZ25cbiAgICByZXR1cm4gZW5kXG4gIGVsc2UgaWYgc3BhY2UtYXJvdW5kID09IGFsaWduXG4gICAgcmV0dXJuIGRpc3RyaWJ1dGVcbiAgZWxzZSBpZiBzcGFjZS1iZXR3ZWVuID09IGFsaWduXG4gICAgcmV0dXJuIGp1c3RpZnlcbiAgZWxzZVxuICAgIHJldHVybiBhbGlnblxuXG4vL1xuLy8gOC4gQWxpZ25tZW50XG4vLyAgICAtIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtZmxleGJveC8jYWxpZ25tZW50XG4vL1xuanVzdGlmeS1jb250ZW50KGFsaWduKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtcGFjaycsIC1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1wYWNrJywgLWNvbnZlcnQtanVzdGlmeShhbGlnbiksIG9ubHk6IG1zKVxuICAgIHZlbmRvcignanVzdGlmeS1jb250ZW50JywgYWxpZ24sIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuYWxpZ24tY29udGVudChhbGlnbilcbiAgLy8gV0FSTjogT2Jzb2xldGUgc3BlYyBkb2VzIG5vdCBhbGxvdyBmb3IgYWRqdXN0bWVudCBoZXJlXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWxpbmUtcGFjaycsIC1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ2FsaWduLWNvbnRlbnQnLCBhbGlnbiwgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG4vLyBjb252ZXJ0cyBhbGlnbm1lbnQgZnJvbSAnZmxleCcgdG8gbm9ybWFsIHZhbHVlXG4tY29udmVydC1hbGlnbm1lbnQoYWxpZ24pXG4gIGlmIGZsZXgtc3RhcnQgPT0gYWxpZ25cbiAgICByZXR1cm4gc3RhcnRcbiAgZWxzZSBpZiBmbGV4LWVuZCA9PSBhbGlnblxuICAgIHJldHVybiBlbmRcbiAgZWxzZVxuICAgIHJldHVybiBhbGlnblxuXG5hbGlnbi1pdGVtcyhhbGlnbilcbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYm94LWFsaWduJywgLWNvbnZlcnQtYWxpZ25tZW50KGFsaWduKSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtYWxpZ24nLCAtY29udmVydC1hbGlnbm1lbnQoYWxpZ24pLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ2FsaWduLWl0ZW1zJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmFsaWduLXNlbGYoYWxpZ24pXG4gIC8vIFdBUk46IE9ic29sZXRlIHNwZWMgZG9lcyBub3QgYWxsb3cgZm9yIG92ZXJyaWRpbmcgYWxpZ25tZW50IG9uIGluZGl2aWR1YWwgaXRlbXMuXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdhbGlnbi1zZWxmJywgYWxpZ24sIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcbiAgICB2ZW5kb3IoJ2ZsZXgtaXRlbS1hbGlnbicsIC1jb252ZXJ0LWFsaWdubWVudChhbGlnbiksIG9ubHk6IG1zKVxuIl19 */

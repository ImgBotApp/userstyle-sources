body {
  line-height: 1.44em !important;
}
a {
  color: #05f !important;
}
a:visited {
  color: #d60 !important;
}
.a-carousel {
  font-size: 10pt !important;
}
.a-carousel .a-color-price {
  font-weight: bold;
  font-size: 11pt !important;
}
#resultsCol .a-fixed-left-grid .a-col-right {
  margin-left: 160px !important;
}
#atwl-popover-inner {
  max-height: 480px !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
